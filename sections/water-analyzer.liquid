<!-- Analyseur Eau Potable - Version avec Formulaire Obligatoire -->
<div class="water-analyzer" data-section-id="{{ section.id }}" style="
  --header-bg: {{ section.settings.header_background | default: '#4facfe' }};
  --header-text: {{ section.settings.header_text_color | default: '#ffffff' }};
  --content-bg: {{ section.settings.content_background | default: '#ffffff' }};
  --search-bg: {{ section.settings.search_background | default: '#f093fb' }};
  --button-bg: {{ section.settings.button_background | default: '#ff6b6b' }};
  --accent-color: {{ section.settings.accent_color | default: '#667eea' }};
  --text-color: {{ section.settings.text_color | default: '#333333' }};
  --border-radius: {{ section.settings.border_radius | default: 20 }}px;
  --section-padding: {{ section.settings.section_padding | default: 2 }}rem;
">
  <!-- Header -->
  <header class="water-analyzer__header">
    <h2 class="water-analyzer__title">
      <span class="water-analyzer__icon">{{ section.settings.header_icon | default: 'üåä' }}</span>
      {{ section.settings.title | default: 'Analyseur Qualit√© Eau Potable' }}
    </h2>
    <p class="water-analyzer__subtitle">
      {{ section.settings.subtitle | default: 'D√©couvrez la qualit√© de l eau √† votre adresse' }}
    </p>
  </header>

  <!-- Main Content -->
  <div class="water-analyzer__content">
    
    <!-- Formulaire Shopify Obligatoire -->
    <section class="water-analyzer__form-section" data-form-section>
      {% form 'contact', class: 'water-analyzer__contact-form' %}
        
        <div class="water-analyzer__search">
          <h3 class="water-analyzer__search-title">
            <span class="water-analyzer__icon">{{ section.settings.search_icon | default: 'üè†' }}</span>
            {{ section.settings.search_title | default: 'Analysez votre eau' }}
          </h3>
          <p class="water-analyzer__search-description">
            {{ section.settings.search_description | default: 'Remplissez le formulaire ci-dessous pour obtenir votre analyse personnalis√©e' }}
          </p>

          <!-- Champs du formulaire -->
          <div class="water-analyzer__form-fields">
            
            <!-- Email (obligatoire) -->
            <div class="water-analyzer__field-group">
              <label for="contact_email" class="water-analyzer__label">
                üìß Votre email *
              </label>
              <input 
                type="email" 
                id="contact_email"
                name="contact[email]"
                class="water-analyzer__input"
                placeholder="votre@email.com"
                required
                value="{{ form.email }}"
              >
              {% if form.errors contains 'email' %}
                <span class="water-analyzer__error">{{ form.errors.translated_fields['email'] | capitalize }} {{ form.errors.messages['email'] }}</span>
              {% endif %}
            </div>

            <!-- Adresse (obligatoire) -->
            <div class="water-analyzer__field-group">
              <label for="contact_address" class="water-analyzer__label">
                üè† Votre adresse postale *
              </label>
              <input 
                type="text" 
                id="contact_address"
                name="contact[address]"
                class="water-analyzer__input"
                placeholder="{{ section.settings.placeholder | default: '01000 Bourg-en-Bresse' }}"
                required
                value="{{ form.address }}"
              >
              {% if form.errors contains 'address' %}
                <span class="water-analyzer__error">{{ form.errors.translated_fields['address'] | capitalize }} {{ form.errors.messages['address'] }}</span>
              {% endif %}
            </div>

            <!-- Nom (optionnel) -->
            {% if section.settings.collect_name %}
            <div class="water-analyzer__field-group">
              <label for="contact_name" class="water-analyzer__label">
                üë§ Votre nom
              </label>
              <input 
                type="text" 
                id="contact_name"
                name="contact[name]"
                class="water-analyzer__input"
                placeholder="Jean Dupont"
                value="{{ form.name }}"
              >
            </div>
            {% endif %}

            <!-- Consentement 1: Analyse approfondie -->
            <div class="water-analyzer__field-group water-analyzer__consent">
              <label class="water-analyzer__checkbox-label">
                <input 
                  type="checkbox" 
                  name="contact[advanced_analysis]"
                  value="true"
                  required
                  class="water-analyzer__checkbox"
                  id="advanced_analysis"
                >
                <span class="water-analyzer__checkmark"></span>
                <span class="water-analyzer__consent-text">
                  Je souhaite √™tre contact√© pour obtenir une <strong>analyse approfondie gratuite</strong> de mon eau *
                </span>
              </label>
            </div>

            <!-- Consentement 2: CGV -->
            <div class="water-analyzer__field-group water-analyzer__consent">
              <label class="water-analyzer__checkbox-label">
                <input 
                  type="checkbox" 
                  name="contact[terms_accepted]"
                  value="true"
                  required
                  class="water-analyzer__checkbox"
                  id="terms_accepted"
                >
                <span class="water-analyzer__checkmark"></span>
                <span class="water-analyzer__consent-text">
                  J'accepte les <a href="/pages/conditions-generales" target="_blank" style="color: var(--accent-color); text-decoration: underline;">conditions g√©n√©rales d'utilisation</a> de l'analyse *
                </span>
              </label>
            </div>

          </div>

          <!-- Bouton de soumission -->
          <div class="water-analyzer__submit-section">
            <button 
              type="submit"
              class="water-analyzer__submit-button"
              id="form-submit-btn"
            >
              <span class="water-analyzer__button-icon">{{ section.settings.button_icon | default: 'üîç' }}</span>
              <span class="water-analyzer__button-text">{{ section.settings.button_text | default: 'Lancer l analyse' }}</span>
            </button>
          </div>

          <!-- Exemples d'adresses -->
          {% if section.settings.show_examples %}
          <div class="water-analyzer__examples">
            <span class="water-analyzer__examples-label">üí° Exemples :</span>
            {% assign examples = section.settings.examples | default: '01000,Gex,Bourg-en-Bresse' | split: ',' %}
            {% for example in examples %}
              <button 
                type="button" 
                class="water-analyzer__example"
                data-example="{{ example | strip }}"
              >
                {{ example | strip }}
              </button>
            {% endfor %}
          </div>
          {% endif %}

        </div>

        <!-- Champs cach√©s pour Shopify -->
        <input type="hidden" name="contact[tags]" value="water-analysis,{{ section.settings.contact_tags | default: 'lead' }}">
        <input type="hidden" name="contact[subject]" value="Demande d'analyse eau - {{ section.settings.title }}">
        
      {% endform %}

      <!-- Messages d'erreur/succ√®s du formulaire -->
      {% if form.posted_successfully? %}
        <div class="water-analyzer__form-success" style="display: none;" data-form-success>
          <div class="water-analyzer__success-content">
            <h3>‚úÖ Formulaire envoy√© avec succ√®s !</h3>
            <p>Nous avons bien re√ßu votre demande. Lancement de l'analyse en cours...</p>
          </div>
        </div>
      {% endif %}

      {% if form.errors %}
        <div class="water-analyzer__form-errors">
          <h4>‚ùå Erreurs dans le formulaire :</h4>
          <ul>
            {% for field in form.errors %}
              <li>{{ field | first | capitalize }} : {{ field | last }}</li>
            {% endfor %}
          </ul>
        </div>
      {% endif %}

    </section>

    <!-- Section d'analyse (cach√©e initialement) -->
    <section class="water-analyzer__analysis-section" data-analysis-section style="display: none;">
      
      <!-- Barre de progression avanc√©e -->
      <div class="water-analyzer__progress-container" data-progress-container style="display: none;">
        <div class="water-analyzer__progress-header">
          <h3>üî¨ Analyse en cours de votre eau</h3>
          <p>Veuillez patienter pendant que nous analysons les donn√©es de qualit√©...</p>
        </div>
        
        <div class="water-analyzer__progress-bar">
          <div class="water-analyzer__progress-fill" data-progress-fill></div>
          <div class="water-analyzer__progress-shimmer"></div>
        </div>
        
        <div class="water-analyzer__progress-steps">
          <div class="water-analyzer__step" data-step="1">
            <div class="water-analyzer__step-circle">
              <span class="water-analyzer__step-number">1</span>
              <span class="water-analyzer__step-check">‚úì</span>
            </div>
            <div class="water-analyzer__step-content">
              <h4>G√©olocalisation</h4>
              <p>Localisation de votre adresse</p>
            </div>
          </div>
          
          <div class="water-analyzer__step" data-step="2">
            <div class="water-analyzer__step-circle">
              <span class="water-analyzer__step-number">2</span>
              <span class="water-analyzer__step-check">‚úì</span>
            </div>
            <div class="water-analyzer__step-content">
              <h4>R√©cup√©ration donn√©es</h4>
              <p>Collecte des analyses officielles</p>
            </div>
          </div>
          
          <div class="water-analyzer__step" data-step="3">
            <div class="water-analyzer__step-circle">
              <span class="water-analyzer__step-number">3</span>
              <span class="water-analyzer__step-check">‚úì</span>
            </div>
            <div class="water-analyzer__step-content">
              <h4>Calcul du score</h4>
              <p>Analyse et scoring qualit√©</p>
            </div>
          </div>
          
          <div class="water-analyzer__step" data-step="4">
            <div class="water-analyzer__step-circle">
              <span class="water-analyzer__step-number">4</span>
              <span class="water-analyzer__step-check">‚úì</span>
            </div>
            <div class="water-analyzer__step-content">
              <h4>Recommandations</h4>
              <p>G√©n√©ration du rapport final</p>
            </div>
          </div>
        </div>
      </div>

      <!-- R√©sultats -->
      <div class="water-analyzer__results" data-results style="display: none;">
        <!-- R√©sultats g√©n√©r√©s par JavaScript -->
      </div>

    </section>

  </div>
</div>

<style>
  .water-analyzer {
    font-family: var(--font-body-family, 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif);
    background: var(--content-bg);
    border-radius: var(--border-radius);
    overflow: hidden;
    box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);
    margin: var(--section-padding) 0;
    color: var(--text-color);
    max-width: 100%;
    position: relative;
  }

  .water-analyzer__header {
    background: var(--header-bg);
    color: var(--header-text);
    padding: var(--section-padding) calc(var(--section-padding) * 0.75);
    text-align: center;
  }

  .water-analyzer__title {
    font-size: clamp(1.5rem, 4vw, 2rem);
    margin: 0 0 0.5rem 0;
    font-weight: 700;
    line-height: 1.2;
  }

  .water-analyzer__subtitle {
    margin: 0;
    opacity: 0.9;
    font-size: clamp(0.9rem, 2.5vw, 1.1rem);
  }

  .water-analyzer__icon {
    display: inline-block;
    margin-right: 0.5rem;
  }

  .water-analyzer__content {
    background: var(--content-bg);
    padding: var(--section-padding) calc(var(--section-padding) * 0.75);
  }

  /* Section de recherche */
  .water-analyzer__search {
    background: var(--search-bg);
    padding: var(--section-padding);
    border-radius: calc(var(--border-radius) * 0.75);
    margin-bottom: var(--section-padding);
    color: white;
  }

  .water-analyzer__search-title {
    margin: 0 0 1rem 0;
    font-size: 1.3rem;
    font-weight: 600;
  }

  .water-analyzer__search-description {
    margin: 0 0 1.5rem 0;
    opacity: 0.95;
  }

  /* Champs de formulaire */
  .water-analyzer__form-fields {
    display: grid;
    gap: 1.25rem;
    margin-bottom: 1.5rem;
  }

  .water-analyzer__field-group {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .water-analyzer__label {
    font-weight: 600;
    font-size: 0.95rem;
    opacity: 0.95;
  }

  .water-analyzer__input {
    padding: 0.875rem 1.25rem;
    border: none;
    border-radius: 25px;
    font-size: 1rem;
    background: rgba(255, 255, 255, 0.95);
    outline: none;
    transition: all 0.3s ease;
    font-family: inherit;
  }

  .water-analyzer__input:focus {
    background: white;
    box-shadow: 0 0 0 3px rgba(255, 255, 255, 0.3);
  }

  .water-analyzer__input:invalid {
    border: 2px solid #ff6b6b;
  }

  .water-analyzer__error {
    color: #ff6b6b;
    font-size: 0.85rem;
    font-weight: 500;
    margin-top: 0.25rem;
  }

  /* Cases √† cocher */
  .water-analyzer__consent {
    margin-top: 0.5rem;
  }

  .water-analyzer__checkbox-label {
    display: flex;
    align-items: flex-start;
    gap: 0.75rem;
    cursor: pointer;
    font-size: 0.9rem;
    line-height: 1.4;
  }

  .water-analyzer__checkbox {
    appearance: none;
    width: 20px;
    height: 20px;
    border: 2px solid rgba(255, 255, 255, 0.7);
    border-radius: 4px;
    background: rgba(255, 255, 255, 0.1);
    cursor: pointer;
    position: relative;
    flex-shrink: 0;
    margin-top: 2px;
    transition: all 0.3s ease;
  }

  .water-analyzer__checkbox:checked {
    background: rgba(255, 255, 255, 0.9);
    border-color: rgba(255, 255, 255, 0.9);
  }

  .water-analyzer__checkbox:checked::after {
    content: '‚úì';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: var(--search-bg);
    font-weight: bold;
    font-size: 14px;
  }

  .water-analyzer__consent-text {
    flex: 1;
  }

  .water-analyzer__consent-text a {
    color: rgba(255, 255, 255, 0.9);
    text-decoration: underline;
  }

  .water-analyzer__consent-text a:hover {
    color: white;
  }

  /* Bouton de soumission */
  .water-analyzer__submit-section {
    text-align: center;
    margin-bottom: 1.5rem;
  }

  .water-analyzer__submit-button {
    padding: 1rem 2rem;
    background: var(--button-bg);
    color: white;
    border: none;
    border-radius: 30px;
    font-size: 1.1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    display: inline-flex;
    align-items: center;
    gap: 0.75rem;
    min-width: 200px;
    justify-content: center;
  }

  .water-analyzer__submit-button:hover:not(:disabled) {
    transform: translateY(-3px);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
  }

  .water-analyzer__submit-button:disabled {
    opacity: 0.7;
    cursor: not-allowed;
    transform: none;
  }

  /* Exemples */
  .water-analyzer__examples {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 0.5rem;
    opacity: 0.9;
    font-size: 0.9rem;
    margin-top: 1rem;
  }

  .water-analyzer__examples-label {
    font-weight: 600;
    margin-right: 0.5rem;
  }

  .water-analyzer__example {
    background: rgba(255, 255, 255, 0.2);
    color: white;
    border: none;
    padding: 0.375rem 0.75rem;
    border-radius: 12px;
    cursor: pointer;
    transition: all 0.2s ease;
    font-size: 0.85rem;
  }

  .water-analyzer__example:hover {
    background: rgba(255, 255, 255, 0.3);
    transform: translateY(-1px);
  }

  /* Messages de formulaire */
  .water-analyzer__form-success {
    background: linear-gradient(135deg, #a8e6cf 0%, #dcedc1 100%);
    padding: var(--section-padding);
    border-radius: calc(var(--border-radius) * 0.75);
    margin-bottom: var(--section-padding);
    text-align: center;
    animation: fadeInUp 0.6s ease-out;
  }

  .water-analyzer__form-success h3 {
    margin: 0 0 1rem 0;
    color: #2d5a27;
    font-size: 1.5rem;
  }

  .water-analyzer__form-success p {
    margin: 0.5rem 0;
    color: #2d5a27;
  }

  .water-analyzer__form-errors {
    background: #f8d7da;
    color: #721c24;
    padding: 1rem;
    border-radius: 8px;
    margin-bottom: 1rem;
    border-left: 4px solid #dc3545;
  }

  .water-analyzer__form-errors h4 {
    margin: 0 0 0.5rem 0;
  }

  .water-analyzer__form-errors ul {
    margin: 0;
    padding-left: 1.5rem;
  }

  /* Barre de progression avanc√©e */
  .water-analyzer__progress-container {
    background: #f8fafc;
    padding: 2rem;
    border-radius: calc(var(--border-radius) * 0.75);
    margin-bottom: 2rem;
  }

  .water-analyzer__progress-header {
    text-align: center;
    margin-bottom: 2rem;
  }

  .water-analyzer__progress-header h3 {
    margin: 0 0 0.5rem 0;
    color: var(--text-color);
    font-size: 1.3rem;
  }

  .water-analyzer__progress-header p {
    margin: 0;
    color: #666;
  }

  .water-analyzer__progress-bar {
    width: 100%;
    height: 8px;
    background: #e2e8f0;
    border-radius: 4px;
    overflow: hidden;
    position: relative;
    margin-bottom: 2rem;
  }

  .water-analyzer__progress-fill {
    height: 100%;
    background: linear-gradient(90deg, var(--accent-color), var(--button-bg));
    border-radius: 4px;
    transition: width 0.8s ease;
    width: 0%;
  }

  .water-analyzer__progress-shimmer {
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.4), transparent);
    animation: shimmer 2s infinite;
  }

  @keyframes shimmer {
    0% { left: -100%; }
    100% { left: 100%; }
  }

  .water-analyzer__progress-steps {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1.5rem;
  }

  .water-analyzer__step {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1rem;
    background: white;
    border-radius: 8px;
    border: 2px solid #e2e8f0;
    transition: all 0.3s ease;
  }

  .water-analyzer__step.active {
    border-color: var(--accent-color);
    background: #f0f9ff;
  }

  .water-analyzer__step.completed {
    border-color: #10b981;
    background: #f0fdf4;
  }

  .water-analyzer__step.error {
    border-color: #ef4444;
    background: #fef2f2;
  }

  .water-analyzer__step-circle {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: #e2e8f0;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    color: #64748b;
    position: relative;
    flex-shrink: 0;
    transition: all 0.3s ease;
  }

  .water-analyzer__step.active .water-analyzer__step-circle {
    background: var(--accent-color);
    color: white;
    animation: pulse 2s infinite;
  }

  .water-analyzer__step.completed .water-analyzer__step-circle {
    background: #10b981;
    color: white;
  }

  .water-analyzer__step.error .water-analyzer__step-circle {
    background: #ef4444;
    color: white;
  }

  .water-analyzer__step-check {
    display: none;
  }

  .water-analyzer__step.completed .water-analyzer__step-number {
    display: none;
  }

  .water-analyzer__step.completed .water-analyzer__step-check {
    display: block;
  }

  .water-analyzer__step-content h4 {
    margin: 0 0 0.25rem 0;
    font-size: 1rem;
    color: var(--text-color);
  }

  .water-analyzer__step-content p {
    margin: 0;
    font-size: 0.85rem;
    color: #666;
  }

  @keyframes pulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.05); }
  }

  /* R√©sultats (styles existants conserv√©s) */
  .water-analyzer__results {
    animation: fadeInUp 0.5s ease-out;
  }

  .water-result {
    border-radius: calc(var(--border-radius) * 0.6);
    padding: 1.5rem;
    margin: 1rem 0;
  }

  .water-result--location {
    background: #f8f9fa;
    border-left: 4px solid var(--accent-color);
  }

  .water-result--score {
    background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%) !important;
    text-align: center;
  }

  .water-result--characteristics {
    background: #f1f5f9;
    border-left: 4px solid #64748b;
  }

  .water-result--problems {
    background: #fffbeb;
    border-left: 4px solid #f59e0b;
  }

  .water-result--recommendation {
    background: #f0f9ff;
    border-left: 4px solid #3b82f6;
  }

  .water-result--info {
    background: #f8fafc;
    border-left: 4px solid #64748b;
  }

  .water-result--email {
    background: #f0fdf4;
    border-left: 4px solid #10b981;
  }

  .water-result--warning {
    background: #fff3cd;
    color: #856404;
    border-left: 4px solid #ffc107;
  }

  .water-result--error {
    background: #f8d7da;
    color: #721c24;
    border-left: 4px solid #dc3545;
  }

  .water-result__title {
    margin: 0 0 1rem 0;
    font-size: 1.2rem;
    font-weight: 600;
  }

  .water-result__content p {
    margin: 0.5rem 0;
  }

  /* Animations */
  @keyframes fadeInUp {
    from { 
      opacity: 0; 
      transform: translateY(30px); 
    }
    to { 
      opacity: 1; 
      transform: translateY(0); 
    }
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .water-analyzer {
      margin: 1rem 0;
      border-radius: calc(var(--border-radius) * 0.75);
    }

    .water-analyzer__header {
      padding: 1.5rem 1rem;
    }

    .water-analyzer__content {
      padding: 1.5rem 1rem;
    }

    .water-analyzer__search {
      padding: 1.5rem;
    }

    .water-analyzer__examples {
      justify-content: center;
    }

    .water-analyzer__submit-button {
      width: 100%;
    }

    .water-analyzer__progress-steps {
      grid-template-columns: 1fr;
    }

    .water-analyzer__step {
      flex-direction: column;
      text-align: center;
    }
  }

  @media (max-width: 480px) {
    .water-analyzer__examples {
      flex-direction: column;
      align-items: flex-start;
    }

    .water-analyzer__examples-label {
      margin-bottom: 0.5rem;
    }
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .water-analyzer {
      border: 2px solid #000;
    }

    .water-analyzer__submit-button {
      border: 2px solid #000;
    }
  }

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .water-analyzer__submit-button:hover {
      transform: none;
    }

    .water-analyzer__example:hover {
      transform: none;
    }

    .water-analyzer__progress-shimmer {
      animation: none;
    }

    .water-analyzer__step.active .water-analyzer__step-circle {
      animation: none;
    }

    .water-analyzer__form-success,
    .water-analyzer__results {
      animation: none;
    }
  }
</style>

<script>
(function() {
  'use strict';
  
  // Configuration avec syst√®me de fallback CORS (conserv√©)
  const CORS_METHODS = [
    {
      name: 'AllOrigins',
      proxy: 'https://api.allorigins.win/get?url=',
      parse: function(data) { return JSON.parse(data.contents); },
      timeout: 10000
    },
    {
      name: 'ProxyAnywhereHeroku', 
      proxy: 'https://cors-anywhere.herokuapp.com/',
      parse: function(data) { return data; },
      timeout: 8000
    },
    {
      name: 'ThingProxy',
      proxy: 'https://thingproxy.freeboard.io/fetch/',
      parse: function(data) { return data; },
      timeout: 8000
    },
    {
      name: 'ProxyCors',
      proxy: 'https://proxy.cors.sh/',
      parse: function(data) { return data; },
      timeout: 8000
    },
    {
      name: 'Direct',
      proxy: '',
      parse: function(data) { return data; },
      timeout: 5000
    }
  ];

  // Configuration (conserv√©e)
  const CONFIG = {
    sectionId: '{{ section.id }}',
    maxRetries: 3,
    cacheTimeout: 300000,
    dateRangeYears: 2
  };

  // Variables globales
  const cache = new Map();
  let userEmail = null;
  let userAddress = null;

  // S√©lecteurs DOM
  const selectors = {
    formSection: '[data-form-section]',
    contactForm: '.water-analyzer__contact-form',
    formSuccess: '[data-form-success]',
    analysisSection: '[data-analysis-section]',
    progressContainer: '[data-progress-container]',
    progressFill: '[data-progress-fill]',
    results: '[data-results]',
    examples: '[data-example]',
    submitBtn: '#form-submit-btn'
  };

  // Utilitaires (conserv√©s)
  const utils = {
    sanitizeHtml: function(str) {
      const div = document.createElement('div');
      div.textContent = str;
      return div.innerHTML;
    },

    formatDate: function(dateString) {
      return new Date(dateString).toLocaleDateString('fr-FR', {
        year: 'numeric',
        month: 'long',
        day: 'numeric'
      });
    },

    getCacheKey: function(address) {
      return 'water_analysis_' + address.toLowerCase().replace(/\s+/g, '_');
    }
  };

  // Gestion de la progression
  const progressManager = {
    currentStep: 0,
    steps: [
      { duration: 2000, progress: 25 },  // G√©olocalisation
      { duration: 3000, progress: 60 },  // R√©cup√©ration donn√©es
      { duration: 2000, progress: 85 },  // Calcul score
      { duration: 1500, progress: 100 }  // Recommandations
    ],

    show: function() {
      const container = document.querySelector(selectors.progressContainer);
      if (container) {
        container.style.display = 'block';
      }
      this.currentStep = 0;
      this.updateProgress(0);
    },

    hide: function() {
      const container = document.querySelector(selectors.progressContainer);
      if (container) {
        container.style.display = 'none';
      }
    },

    setStep: function(stepNumber) {
      this.currentStep = stepNumber;
      
      // Mettre √† jour les √©tats visuels des √©tapes
      const steps = document.querySelectorAll('[data-step]');
      steps.forEach(function(step, index) {
        const stepNum = index + 1;
        step.classList.remove('active', 'completed', 'error');
        
        if (stepNum < stepNumber) {
          step.classList.add('completed');
        } else if (stepNum === stepNumber) {
          step.classList.add('active');
        }
      });

      // Animer la barre de progression
      if (stepNumber <= this.steps.length) {
        const targetProgress = stepNumber === 0 ? 0 : this.steps[stepNumber - 1].progress;
        this.updateProgress(targetProgress);
      }
    },

    updateProgress: function(percentage) {
      const fill = document.querySelector(selectors.progressFill);
      if (fill) {
        fill.style.width = percentage + '%';
      }
    },

    setError: function(stepNumber) {
      const step = document.querySelector('[data-step="' + stepNumber + '"]');
      if (step) {
        step.classList.remove('active', 'completed');
        step.classList.add('error');
      }
    }
  };

  // Fonction de fetch avec timeout (conserv√©e)
  function fetchWithTimeout(url, options) {
    options = options || {};
    const timeout = options.timeout || 5000;
    const fetchOptions = Object.assign({}, options);
    delete fetchOptions.timeout;
    
    const controller = new AbortController();
    const timeoutId = setTimeout(function() {
      controller.abort();
    }, timeout);
    
    fetchOptions.signal = controller.signal;
    
    return fetch(url, fetchOptions).then(function(response) {
      clearTimeout(timeoutId);
      return response;
    }).catch(function(error) {
      clearTimeout(timeoutId);
      throw error;
    });
  }

  // Fonction de fetch avec fallback (conserv√©e)
  function fetchWithFallback(url, methodIndex, retryCount) {
    methodIndex = methodIndex || 0;
    retryCount = retryCount || 0;
    
    if (methodIndex >= CORS_METHODS.length) {
      throw new Error('Toutes les m√©thodes de connexion ont √©chou√©. V√©rifiez votre connexion internet.');
    }

    const method = CORS_METHODS[methodIndex];
    const proxyUrl = method.proxy ? method.proxy + encodeURIComponent(url) : url;
    
    return fetchWithTimeout(proxyUrl, {
      method: 'GET',
      headers: {
        'Accept': 'application/json',
        'User-Agent': 'WaterAnalyzer/1.0'
      },
      mode: 'cors',
      timeout: method.timeout
    }).then(function(response) {
      if (!response.ok) {
        throw new Error('HTTP ' + response.status + ': ' + response.statusText);
      }
      return response.json();
    }).then(function(data) {
      return method.parse(data);
    }).catch(function(error) {
      if (retryCount < CONFIG.maxRetries) {
        return new Promise(function(resolve) {
          setTimeout(resolve, 1000 * (retryCount + 1));
        }).then(function() {
          return fetchWithFallback(url, methodIndex, retryCount + 1);
        });
      }
      
      return fetchWithFallback(url, methodIndex + 1, 0);
    });
  }

  // Fonction de calcul de score (conserv√©e int√©gralement)
  function calculateWaterScore(qualityData) {
    if (!qualityData || !qualityData.data || !qualityData.data.length) {
      return null;
    }

    const analyses = qualityData.data;
    let scoreBase = 85;
    let penaliteBacterio = 0;
    let penaliteTurbidite = 0;
    let penaliteChimique = 0;
    let penaliteChlore = 0;
    let bonus = 0;

    // Analyser les donn√©es r√©centes (derni√®res analyses)
    const recentAnalyses = analyses.slice(0, 20); // Prendre les 20 plus r√©centes
    
    // Variables pour stocker les valeurs moyennes/max des param√®tres critiques
    let maxTurbidite = 0;
    let avgConductivite = 0;
    let maxChloreLibre = 0;
    let maxChloreTotal = 0;
    let bacteriesDetected = false;
    let aspectAnormal = false;
    let avgPH = 7.5;
    let polluantsDetected = false;

    // Parcourir les analyses pour extraire les param√®tres cl√©s
    recentAnalyses.forEach(function(analyse) {
      const libelle = (analyse.libelle_parametre || '').toLowerCase();
      const valeur = parseFloat(analyse.resultat_numerique) || 0;
      const unite = analyse.libelle_unite || '';
      
      // D√©tecter les param√®tres selon leur libell√©
      if (libelle.includes('turbidit√©') || libelle.includes('turbidite')) {
        maxTurbidite = Math.max(maxTurbidite, valeur);
      }
      
      if (libelle.includes('conductivit√©') || libelle.includes('conductivite')) {
        avgConductivite = Math.max(avgConductivite, valeur);
      }
      
      if (libelle.includes('chlore libre')) {
        maxChloreLibre = Math.max(maxChloreLibre, valeur);
      }
      
      if (libelle.includes('chlore total')) {
        maxChloreTotal = Math.max(maxChloreTotal, valeur);
      }
      
      if (libelle.includes('ph')) {
        avgPH = valeur > 0 ? valeur : avgPH;
      }
      
      // D√©tecter les bact√©ries pathog√®nes
      if ((libelle.includes('coli') || libelle.includes('coliforme') || libelle.includes('enterocoque')) && valeur > 0) {
        bacteriesDetected = true;
      }
      
      // D√©tecter l'aspect anormal
      if (libelle.includes('aspect') && analyse.resultat_alphanumerique && analyse.resultat_alphanumerique.toLowerCase().includes('anormal')) {
        aspectAnormal = true;
      }
      
      // D√©tecter les polluants chimiques
      if ((libelle.includes('ammonium') || libelle.includes('nitrite') || libelle.includes('plomb') || libelle.includes('pesticide')) && valeur > 0) {
        polluantsDetected = true;
      }
    });

    // === CALCUL DES P√âNALIT√âS SELON NOTRE ALGORITHME ===

    // 1. P√©nalit√©s bact√©riologiques (max -40)
    if (bacteriesDetected) {
      penaliteBacterio = 25; // E.coli ou coliformes d√©tect√©s
    }

    // 2. P√©nalit√©s turbidit√©/aspect (max -25)
    if (maxTurbidite > 2) {
      penaliteTurbidite += 15;
    }
    if (aspectAnormal) {
      penaliteTurbidite += 10;
    }
    penaliteTurbidite = Math.min(penaliteTurbidite, 25);

    // 3. P√©nalit√©s chimiques (max -20)
    if (polluantsDetected) {
      penaliteChimique = 10;
    }

    // 4. P√©nalit√©s chlore (max -10)
    if (maxChloreLibre > 0.3) {
      penaliteChlore += 5;
    }
    if (maxChloreTotal > 0.5) {
      penaliteChlore += 10;
    } else if (maxChloreTotal > 0.3) {
      penaliteChlore += 5;
    }
    penaliteChlore = Math.min(penaliteChlore, 10);

    // === CALCUL DES BONUS ===
    if (maxTurbidite < 0.1) {
      bonus += 2;
    }
    if (maxChloreLibre <= 0.05) {
      bonus += 2;
    }
    if (avgPH >= 7.2 && avgPH <= 7.8) {
      bonus += 1;
    }
    bonus = Math.min(bonus, 5);

    // === SCORE FINAL ===
    const penaliteTotale = penaliteBacterio + penaliteTurbidite + penaliteChimique + penaliteChlore;
    const scoreFinal = Math.min(100, Math.max(0, scoreBase - penaliteTotale + bonus));

    // === CLASSIFICATION ===
    let categorie, couleur, emoji, action;
    if (scoreFinal >= 90) {
      categorie = "EXCELLENTE"; couleur = "#2E7D32"; emoji = "üü¢"; action = "Aucune action n√©cessaire";
    } else if (scoreFinal >= 80) {
      categorie = "TR√àS BONNE"; couleur = "#4CAF50"; emoji = "üü¢"; action = "Surveillance recommand√©e";
    } else if (scoreFinal >= 60) {
      categorie = "BONNE"; couleur = "#FF9800"; emoji = "üü°"; action = "Traitement l√©ger conseill√©";
    } else if (scoreFinal >= 40) {
      categorie = "MOYENNE"; couleur = "#FF5722"; emoji = "üü†"; action = "Traitement recommand√©";
    } else if (scoreFinal >= 20) {
      categorie = "M√âDIOCRE"; couleur = "#D32F2F"; emoji = "üî¥"; action = "Traitement urgent";
    } else {
      categorie = "DANGEREUSE"; couleur = "#B71C1C"; emoji = "üî¥"; action = "Traitement obligatoire";
    }

    // === CLASSIFICATION DURET√â ===
    let dureteNiveau, dureteAlerte, dureteCouleur;
    if (avgConductivite < 200) {
      dureteNiveau = "Tr√®s douce"; dureteAlerte = "Risque de corrosion"; dureteCouleur = "#2196F3";
    } else if (avgConductivite <= 400) {
      dureteNiveau = "Douce"; dureteAlerte = "L√©g√®rement corrosive"; dureteCouleur = "#4CAF50";
    } else if (avgConductivite <= 800) {
      dureteNiveau = "Moyennement dure"; dureteAlerte = "D√©p√¥ts calcaire mod√©r√©s"; dureteCouleur = "#FF9800";
    } else if (avgConductivite <= 1100) {
      dureteNiveau = "Dure"; dureteAlerte = "Probl√®mes calcaire importants"; dureteCouleur = "#FF5722";
    } else {
      dureteNiveau = "Tr√®s dure"; dureteAlerte = "Calcaire excessif"; dureteCouleur = "#D32F2F";
    }

    // === RECOMMANDATION PRODUIT ===
    let produitRecommande, objectif, collectionHandle;
    if (scoreFinal >= 90) {
      produitRecommande = "Carafe filtrante";
      objectif = "Am√©liorer le go√ªt (√©liminer chlore r√©siduel)";
      collectionHandle = "carafes-filtrantes";
    } else if (scoreFinal >= 80) {
      if (avgConductivite > 400) {
        produitRecommande = "Adoucisseur d'eau";
        objectif = "Prot√©ger √©lectrom√©nager, am√©liorer confort";
        collectionHandle = "adoucisseurs";
      } else {
        produitRecommande = "Filtration charbon actif";
        objectif = "Am√©liorer go√ªt et odeur";
        collectionHandle = "filtres-charbon";
      }
    } else if (scoreFinal >= 60) {
      produitRecommande = "Syst√®me pr√©filtration + filtration";
      objectif = "√âliminer chlore, s√©diments, am√©liorer go√ªt";
      collectionHandle = "systemes-complets";
    } else if (scoreFinal >= 40) {
      produitRecommande = "Syst√®me complet avec UV";
      objectif = "S√©curit√© sanitaire et qualit√© organoleptique";
      collectionHandle = "systemes-uv";
    } else {
      produitRecommande = "Osmoseur + remin√©ralisation";
      objectif = "Purification totale et remin√©ralisation";
      collectionHandle = "osmoseurs";
    }

    return {
      score: scoreFinal,
      categorie: categorie,
      couleur: couleur,
      emoji: emoji,
      action: action,
      durete: {
        niveau: dureteNiveau,
        valeur: avgConductivite,
        alerte: dureteAlerte,
        couleur: dureteCouleur
      },
      problemes: {
        bacteries: bacteriesDetected,
        turbidite: maxTurbidite > 2,
        chlore: maxChloreLibre > 0.3,
        aspect: aspectAnormal,
        polluants: polluantsDetected
      },
      recommandation: {
        produit: produitRecommande,
        objectif: objectif,
        collection: collectionHandle
      },
      parametres: {
        turbidite: maxTurbidite,
        conductivite: avgConductivite,
        chloreLibre: maxChloreLibre,
        chloreTotal: maxChloreTotal,
        ph: avgPH
      }
    };
  }

  // Fonction d'analyse (conserv√©e avec progression)
  function analyzeWater(address) {
    if (!address || !address.trim()) {
      throw new Error('Veuillez saisir une adresse valide');
    }

    const cacheKey = utils.getCacheKey(address);
    
    if (cache.has(cacheKey)) {
      const cached = cache.get(cacheKey);
      if (Date.now() - cached.timestamp < CONFIG.cacheTimeout) {
        return Promise.resolve(cached.data);
      }
    }

    progressManager.show();
    progressManager.setStep(1);
    
    const addressUrl = 'https://api-adresse.data.gouv.fr/search/?q=' + encodeURIComponent(address) + '&limit=5';
    
    return fetchWithFallback(addressUrl).then(function(locationData) {
      if (!locationData || !locationData.features || !locationData.features.length) {
        throw new Error('Adresse non trouv√©e. Essayez avec le code postal ou le nom de la ville.');
      }

      const location = locationData.features[0];
      const cityCode = location.properties.citycode;
      
      progressManager.setStep(2);
      
      const dateLimit = new Date();
      dateLimit.setFullYear(dateLimit.getFullYear() - CONFIG.dateRangeYears);
      const dateLimitStr = dateLimit.toISOString().split('T')[0];

      const waterUrl = 'https://hubeau.eaufrance.fr/api/v1/qualite_eau_potable/resultats_dis?code_commune=' + cityCode + '&date_min_prelevement=' + dateLimitStr + '&size=200&format=json&sort=desc';
      
      return fetchWithFallback(waterUrl).then(function(qualityData) {
        progressManager.setStep(3);

        // Simuler le temps de calcul
        return new Promise(function(resolve) {
          setTimeout(function() {
            progressManager.setStep(4);
            
            const result = {
              location: location,
              qualityData: qualityData,
              timestamp: Date.now()
            };

            cache.set(cacheKey, {
              data: result,
              timestamp: Date.now()
            });

            // Finaliser la progression
            setTimeout(function() {
              progressManager.hide();
              resolve(result);
            }, 1500);
          }, 2000);
        });
      });
    });
  }

  // G√©n√©ration du HTML des r√©sultats (conserv√©e int√©gralement)
  function generateResultsHtml(location, qualityResponse) {
    const props = location.properties;
    let html = '';

    // Calculer le score
    const scoreData = calculateWaterScore(qualityResponse);

    // Informations sur l'adresse (garder l'existant)
    html += '<div class="water-result water-result--location">';
    html += '<h3 class="water-result__title">üìç Adresse analys√©e</h3>';
    html += '<div class="water-result__content">';
    html += '<p><strong>' + utils.sanitizeHtml(props.label) + '</strong></p>';
    html += '<p>üèòÔ∏è ' + utils.sanitizeHtml(props.city) + ' (' + (props.postcode || 'N/A') + ')</p>';
    html += '<p>üÜî Code INSEE: ' + props.citycode + '</p>';
    if (props.context) {
      html += '<p>üìç ' + utils.sanitizeHtml(props.context) + '</p>';
    }
    html += '</div></div>';

    if (scoreData) {
      // === NOUVEAU : AFFICHAGE DU SCORE PRINCIPAL ===
      html += '<div class="water-result water-result--score" style="text-align: center; background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%); border-left: 4px solid ' + scoreData.couleur + ';">';
      html += '<h3 class="water-result__title">üéØ Score de Qualit√©</h3>';
      html += '<div class="water-result__content">';
      
      // Cercle de score
      html += '<div style="display: inline-block; width: 120px; height: 120px; border: 8px solid ' + scoreData.couleur + '; border-radius: 50%; display: flex; flex-direction: column; align-items: center; justify-content: center; margin: 1rem auto;">';
      html += '<div style="font-size: 36px; font-weight: bold; color: ' + scoreData.couleur + ';">' + scoreData.score + '</div>';
      html += '<div style="font-size: 14px; color: #666;">/ 100</div>';
      html += '</div>';
      
      // Badge cat√©gorie
      html += '<div style="background: ' + scoreData.couleur + '; color: white; padding: 10px 20px; border-radius: 25px; font-weight: bold; margin: 1rem auto; display: inline-block;">';
      html += scoreData.emoji + ' ' + scoreData.categorie;
      html += '</div>';
      
      html += '<p style="font-size: 1.1rem; margin: 1rem 0;"><strong>' + scoreData.action + '</strong></p>';
      html += '</div></div>';

      // === NOUVEAU : CARACT√âRISTIQUES DE L'EAU ===
      html += '<div class="water-result water-result--characteristics">';
      html += '<h3 class="water-result__title">üíß Caract√©ristiques de votre eau</h3>';
      html += '<div class="water-result__content">';
      
      // Duret√©
      html += '<div style="background: #f8f9fa; padding: 1rem; margin: 0.5rem 0; border-radius: 8px; border-left: 4px solid ' + scoreData.durete.couleur + ';">';
      html += '<p><strong>Duret√© :</strong> <span style="color: ' + scoreData.durete.couleur + '; font-weight: bold;">' + scoreData.durete.niveau + '</span>';
      if (scoreData.durete.valeur > 0) {
        html += ' (' + scoreData.durete.valeur.toFixed(0) + ' ¬µS/cm)';
      }
      html += '</p>';
      html += '<p style="font-size: 0.9rem; color: #666; margin: 0.5rem 0 0 0;">' + scoreData.durete.alerte + '</p>';
      html += '</div>';
      
      // Param√®tres d√©tect√©s
      if (scoreData.parametres.ph > 0) {
        html += '<p>üî¨ <strong>pH :</strong> ' + scoreData.parametres.ph.toFixed(1) + '</p>';
      }
      if (scoreData.parametres.turbidite > 0) {
        html += '<p>üíé <strong>Turbidit√© :</strong> ' + scoreData.parametres.turbidite.toFixed(2) + ' NFU</p>';
      }
      if (scoreData.parametres.chloreLibre > 0) {
        html += '<p>üß™ <strong>Chlore libre :</strong> ' + scoreData.parametres.chloreLibre.toFixed(2) + ' mg/L</p>';
      }
      
      html += '</div></div>';

      // === NOUVEAU : PROBL√àMES D√âTECT√âS ===
      const hasProblems = scoreData.problemes.bacteries || scoreData.problemes.turbidite || scoreData.problemes.chlore || scoreData.problemes.aspect || scoreData.problemes.polluants;
      
      if (hasProblems) {
        html += '<div class="water-result water-result--problems" style="background: #fffbeb; border-left: 4px solid #f59e0b;">';
        html += '<h3 class="water-result__title">‚ö†Ô∏è Points d\'attention d√©tect√©s</h3>';
        html += '<div class="water-result__content">';
        html += '<ul style="margin: 0; padding-left: 1.5rem;">';
        
        if (scoreData.problemes.bacteries) {
          html += '<li style="color: #dc2626; margin: 0.5rem 0;">Bact√©ries pathog√®nes d√©tect√©es ‚Üí Risque sanitaire</li>';
        }
        if (scoreData.problemes.turbidite) {
          html += '<li style="color: #dc2626; margin: 0.5rem 0;">Turbidit√© √©lev√©e (' + scoreData.parametres.turbidite.toFixed(1) + ' NFU) ‚Üí Eau trouble</li>';
        }
        if (scoreData.problemes.chlore) {
          html += '<li style="color: #dc2626; margin: 0.5rem 0;">Chlore r√©siduel √©lev√© (' + scoreData.parametres.chloreLibre.toFixed(2) + ' mg/L) ‚Üí Go√ªt/odeur alt√©r√©s</li>';
        }
        if (scoreData.problemes.aspect) {
          html += '<li style="color: #dc2626; margin: 0.5rem 0;">Aspect anormal d√©tect√© ‚Üí Qualit√© visuelle alt√©r√©e</li>';
        }
        if (scoreData.problemes.polluants) {
          html += '<li style="color: #dc2626; margin: 0.5rem 0;">Traces de polluants chimiques ‚Üí Surveillance recommand√©e</li>';
        }
        if (scoreData.durete.valeur > 400) {
          html += '<li style="color: #f59e0b; margin: 0.5rem 0;">' + scoreData.durete.niveau + ' ‚Üí ' + scoreData.durete.alerte + '</li>';
        }
        
        html += '</ul>';
        html += '</div></div>';
      }

      // === NOUVEAU : RECOMMANDATION PRODUIT ===
      html += '<div class="water-result water-result--recommendation" style="background: #f0f9ff; border-left: 4px solid #3b82f6;">';
      html += '<h3 class="water-result__title">üí° Notre recommandation personnalis√©e</h3>';
      html += '<div class="water-result__content">';
      html += '<div style="background: white; padding: 1.5rem; border-radius: 8px; border: 1px solid #e5e7eb;">';
      html += '<h4 style="margin: 0 0 1rem 0; color: #1f2937;">' + scoreData.recommandation.produit + '</h4>';
      html += '<p style="margin: 0 0 1rem 0;"><strong>Objectif :</strong> ' + scoreData.recommandation.objectif + '</p>';
      
      // Bouton CTA vers la collection
      html += '<a href="/collections/' + scoreData.recommandation.collection + '" style="display: inline-block; background: #3b82f6; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; font-weight: 600; transition: all 0.3s ease;">';
      html += 'üõí D√©couvrir nos solutions ' + scoreData.recommandation.produit.toLowerCase();
      html += '</a>';
      
      html += '</div>';
      html += '</div></div>';

      // Informations g√©n√©rales sur l'analyse (garder la partie existante)
      if (qualityResponse && qualityResponse.data && qualityResponse.data.length > 0) {
        const analyses = qualityResponse.data;
        const latest = analyses[0];
        const lastDate = utils.formatDate(latest.date_prelevement);

        html += '<div class="water-result water-result--info" style="background: #f8fafc; border-left: 4px solid #64748b;">';
        html += '<h3 class="water-result__title">üìä Informations techniques</h3>';
        html += '<div class="water-result__content">';
        html += '<p><strong>Derni√®re analyse :</strong> ' + lastDate + '</p>';
        html += '<p><strong>Total analyses :</strong> ' + analyses.length + ' sur ' + CONFIG.dateRangeYears + ' ans</p>';
        if (latest.nom_distributeur) {
          html += '<p><strong>Distributeur :</strong> ' + utils.sanitizeHtml(latest.nom_distributeur) + '</p>';
        }
        html += '</div></div>';
      }

    } else {
      // Cas o√π il n'y a pas de donn√©es (garder l'existant)
      html += '<div class="water-result water-result--warning">';
      html += '<h4 class="water-result__title">‚ö†Ô∏è Aucune analyse r√©cente disponible</h4>';
      html += '<div class="water-result__content">';
      html += '<p>Aucune donn√©e d\'analyse trouv√©e pour <strong>' + utils.sanitizeHtml(props.city) + '</strong> sur les ' + CONFIG.dateRangeYears + ' derni√®res ann√©es.</p>';
      html += '<p>Cette commune peut √™tre desservie par un r√©seau intercommunal ou les donn√©es peuvent ne pas √™tre encore disponibles dans la base nationale.</p>';
      html += '<p>üí° Contactez votre mairie ou votre distributeur d\'eau pour plus d\'informations.</p>';
      html += '</div></div>';
    }

    // Information email (garder l'existant)
    if (userEmail) {
      html += '<div class="water-result water-result--email" style="background: #f0fdf4; border-left: 4px solid #10b981;">';
      html += '<h4 class="water-result__title">üìß Rapport envoy√©</h4>';
      html += '<div class="water-result__content">';
      html += '<p>Un rapport d√©taill√© a √©t√© envoy√© √† <strong>' + utils.sanitizeHtml(userEmail) + '</strong></p>';
      html += '<p>V√©rifiez votre bo√Æte de r√©ception (et vos spams) dans les prochaines minutes.</p>';
      html += '</div></div>';
    }

    return html;
  }

  // Affichage d'erreur
  function showError(message) {
    progressManager.hide();
    
    const html = '<div class="water-result water-result--error">' +
      '<h4 class="water-result__title">‚ùå Erreur</h4>' +
      '<div class="water-result__content">' +
      '<p>' + utils.sanitizeHtml(message) + '</p>' +
      '<p>üí° <strong>Suggestions :</strong></p>' +
      '<p>‚Ä¢ Essayez avec un code postal (ex: 01000)</p>' +
      '<p>‚Ä¢ V√©rifiez l\'orthographe de votre adresse</p>' +
      '<p>‚Ä¢ V√©rifiez votre connexion internet</p>' +
      '</div></div>';
    
    const results = document.querySelector(selectors.results);
    if (results) {
      results.innerHTML = html;
      results.style.display = 'block';
    }
  }

  // Gestionnaire de soumission du formulaire
  function handleFormSubmit(event) {
    event.preventDefault();
    
    const form = event.target;
    const formData = new FormData(form);
    
    // R√©cup√©rer les donn√©es du formulaire
    userEmail = formData.get('contact[email]');
    userAddress = formData.get('contact[address]');
    const advancedAnalysis = formData.get('contact[advanced_analysis]');
    const termsAccepted = formData.get('contact[terms_accepted]');
    
    // Validation c√¥t√© client
    if (!userEmail || !userAddress) {
      alert('Veuillez remplir tous les champs obligatoires');
      return;
    }
    
    if (!advancedAnalysis || !termsAccepted) {
      alert('Veuillez accepter les conditions requises');
      return;
    }
    
    // D√©sactiver le bouton de soumission
    const submitBtn = document.querySelector(selectors.submitBtn);
    if (submitBtn) {
      submitBtn.disabled = true;
      submitBtn.innerHTML = '<span class="water-analyzer__button-icon">üîÑ</span><span class="water-analyzer__button-text">Envoi en cours...</span>';
    }
    
    // Simuler l'envoi du formulaire (en r√©alit√© Shopify g√®re √ßa)
    setTimeout(function() {
      // Masquer le formulaire et afficher le message de succ√®s
      const formSection = document.querySelector(selectors.formSection);
      const analysisSection = document.querySelector(selectors.analysisSection);
      
      if (formSection) formSection.style.display = 'none';
      if (analysisSection) analysisSection.style.display = 'block';
      
      // Lancer l'analyse automatiquement
      setTimeout(function() {
        startAnalysis(userAddress);
      }, 1000);
      
    }, 2000);
  }

  // Fonction pour d√©marrer l'analyse
  function startAnalysis(address) {
    analyzeWater(address).then(function(result) {
      const html = generateResultsHtml(result.location, result.qualityData);
      const results = document.querySelector(selectors.results);
      if (results) {
        results.innerHTML = html;
        results.style.display = 'block';
        
        setTimeout(function() {
          results.scrollIntoView({ 
            behavior: 'smooth', 
            block: 'start' 
          });
        }, 100);
      }
    }).catch(function(error) {
      showError(error.message);
    });
  }

  // Gestionnaire des exemples
  function setExample(address) {
    const input = document.querySelector('#contact_address');
    if (input) {
      input.value = address;
      input.focus();
    }
  }

  // Initialisation
  function init() {
    console.log('üåä Water Analyzer (Form Required) initialized');

    // Gestionnaire du formulaire de contact
    const contactForm = document.querySelector(selectors.contactForm);
    if (contactForm) {
      contactForm.addEventListener('submit', handleFormSubmit);
    }

    // Gestionnaires des exemples
    const examples = document.querySelectorAll(selectors.examples);
    examples.forEach(function(example) {
      example.addEventListener('click', function() {
        const address = this.dataset.example;
        setExample(address);
        
        this.style.transform = 'scale(0.95)';
        setTimeout(() => {
          this.style.transform = '';
        }, 150);
      });
    });

    // V√©rifier si le formulaire a √©t√© soumis avec succ√®s
    const formSuccess = document.querySelector(selectors.formSuccess);
    if (formSuccess) {
      formSuccess.style.display = 'block';
      
      // Si on a les donn√©es dans l'URL ou le localStorage, lancer l'analyse
      const urlParams = new URLSearchParams(window.location.search);
      const savedAddress = urlParams.get('address') || localStorage.getItem('water_analysis_address');
      const savedEmail = urlParams.get('email') || localStorage.getItem('water_analysis_email');
      
      if (savedAddress && savedEmail) {
        userAddress = savedAddress;
        userEmail = savedEmail;
        
        setTimeout(function() {
          const formSection = document.querySelector(selectors.formSection);
          const analysisSection = document.querySelector(selectors.analysisSection);
          
          if (formSection) formSection.style.display = 'none';
          if (analysisSection) analysisSection.style.display = 'block';
          
          startAnalysis(userAddress);
        }, 2000);
      }
    }
  }

  // D√©marrage
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', init);
  } else {
    init();
  }

})();
</script>

{% schema %}
{
  "name": "Analyseur Eau",
  "settings": [
    {
      "type": "header",
      "content": "üé® Apparence g√©n√©rale"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Titre principal",
      "default": "Analyseur Qualit√© Eau Potable",
      "info": "Le titre affich√© en haut de la section"
    },
    {
      "type": "text",
      "id": "subtitle",
      "label": "Sous-titre",
      "default": "D√©couvrez la qualit√© de l'eau √† votre adresse",
      "info": "Description affich√©e sous le titre"
    },
    {
      "type": "color",
      "id": "header_background",
      "label": "Couleur de l'en-t√™te",
      "default": "#4facfe",
      "info": "Couleur de fond de l'en-t√™te"
    },
    {
      "type": "color",
      "id": "header_text_color",
      "label": "Couleur du texte en-t√™te",
      "default": "#ffffff",
      "info": "Couleur du texte dans l'en-t√™te"
    },
    {
      "type": "color",
      "id": "content_background",
      "label": "Couleur de fond du contenu",
      "default": "#ffffff",
      "info": "Couleur de fond de la zone de contenu"
    },
    {
      "type": "header",
      "content": "üîç Section de recherche"
    },
    {
      "type": "text",
      "id": "search_title",
      "label": "Titre de la section recherche",
      "default": "Analysez votre eau",
      "info": "Titre de la zone de recherche"
    },
    {
      "type": "textarea",
      "id": "search_description",
      "label": "Description de la recherche",
      "default": "Remplissez le formulaire ci-dessous pour obtenir votre analyse personnalis√©e",
      "info": "Texte explicatif pour la recherche"
    },
    {
      "type": "color",
      "id": "search_background",
      "label": "Couleur de fond recherche",
      "default": "#f093fb",
      "info": "Couleur de fond de la zone de recherche"
    },
    {
      "type": "text",
      "id": "placeholder",
      "label": "Placeholder du champ adresse",
      "default": "01000 Bourg-en-Bresse",
      "info": "Texte d'exemple dans le champ de saisie"
    },
    {
      "type": "header",
      "content": "üéØ Bouton d'action"
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Texte du bouton",
      "default": "Lancer l'analyse",
      "info": "Texte affich√© sur le bouton de soumission"
    },
    {
      "type": "color",
      "id": "button_background",
      "label": "Couleur du bouton",
      "default": "#ff6b6b",
      "info": "Couleur de fond du bouton d'analyse"
    },
    {
      "type": "header",
      "content": "‚öôÔ∏è Options du formulaire"
    },
    {
      "type": "checkbox",
      "id": "collect_name",
      "label": "Collecter le nom",
      "default": true,
      "info": "Ajouter un champ nom au formulaire"
    },
    {
      "type": "checkbox",
      "id": "show_examples",
      "label": "Afficher les exemples",
      "default": true,
      "info": "Affiche les boutons d'exemples d'adresses"
    },
    {
      "type": "text",
      "id": "examples",
      "label": "Exemples d'adresses",
      "default": "01000,Gex,Bourg-en-Bresse",
      "info": "Liste d'exemples s√©par√©s par des virgules"
    },
    {
      "type": "header",
      "content": "üé® Couleurs syst√®me"
    },
    {
      "type": "color",
      "id": "accent_color",
      "label": "Couleur d'accent",
      "default": "#667eea",
      "info": "Couleur utilis√©e pour les √©l√©ments d'interface"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Couleur du texte",
      "default": "#333333",
      "info": "Couleur du texte principal"
    },
    {
      "type": "header",
      "content": "üìê Dimensions et espacement"
    },
    {
      "type": "range",
      "id": "border_radius",
      "label": "Arrondi des bords",
      "min": 0,
      "max": 50,
      "step": 5,
      "default": 20,
      "unit": "px",
      "info": "Arrondi des coins de la section"
    },
    {
      "type": "range",
      "id": "section_padding",
      "label": "Espacement interne",
      "min": 1,
      "max": 5,
      "step": 1,
      "default": 2,
      "unit": "rem",
      "info": "Espacement interne de la section"
    },
    {
      "type": "header",
      "content": "üîß Configuration technique"
    },
    {
      "type": "text",
      "id": "contact_tags",
      "label": "Tags de contact",
      "default": "lead,water-analysis",
      "info": "Tags ajout√©s aux contacts (s√©par√©s par des virgules)"
    },
    {
      "type": "header",
      "content": "üòÄ Ic√¥nes et emojis"
    },
    {
      "type": "text",
      "id": "header_icon",
      "label": "Ic√¥ne du header",
      "default": "üåä",
      "info": "Emoji affich√© dans le titre principal"
    },
    {
      "type": "text",
      "id": "search_icon",
      "label": "Ic√¥ne de recherche",
      "default": "üè†",
      "info": "Emoji affich√© dans le titre de recherche"
    },
    {
      "type": "text",
      "id": "button_icon",
      "label": "Ic√¥ne du bouton",
      "default": "üîç",
      "info": "Emoji affich√© dans le bouton"
    }
  ],
  "presets": [
    {
      "name": "Analyseur Eau"
    }
  ]
}
{% endschema %}