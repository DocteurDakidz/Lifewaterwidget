<!-- Analyseur Eau Potable - Version Sans Captcha -->
<div class="water-analyzer" data-section-id="{{ section.id }}" style="
  --primary-color: {{ section.settings.primary_color | default: '#667eea' }};
  --secondary-color: {{ section.settings.secondary_color | default: '#764ba2' }};
  --accent-color: {{ section.settings.accent_color | default: '#f093fb' }};
  --button-color: {{ section.settings.button_color | default: '#ff6b6b' }};
  --text-color: {{ section.settings.text_color | default: '#333333' }};
  --border-radius: {{ section.settings.border_radius | default: 20 }}px;
  --section-padding: {{ section.settings.section_padding | default: 2 }}rem;
">
  <!-- Header -->
  <header class="water-analyzer__header">
    <h2 class="water-analyzer__title">
      <span class="water-analyzer__icon">{{ section.settings.header_icon | default: '🌊' }}</span>
      {{ section.settings.title | default: 'Analyseur Qualité Eau Potable' }}
    </h2>
    <p class="water-analyzer__subtitle">
      {{ section.settings.subtitle | default: 'Découvrez la qualité de l eau à votre adresse' }}
    </p>
  </header>

  <!-- Main Content -->
  <div class="water-analyzer__content">
    
    <!-- Formulaire de Contact Initial -->
    <section class="water-analyzer__form-section" data-form-section>
      <div class="water-analyzer__search">
        <h3 class="water-analyzer__search-title">
          <span class="water-analyzer__icon">{{ section.settings.search_icon | default: '🏠' }}</span>
          {{ section.settings.search_title | default: 'Analysez votre eau' }}
        </h3>
        <p class="water-analyzer__search-description">
          {{ section.settings.search_description | default: 'Saisissez votre adresse pour obtenir un rapport de qualité détaillé' }}
        </p>

        <!-- Formulaire personnalisé (sans Shopify) -->
        <form class="water-analyzer__custom-form" data-custom-form>
          
          <!-- Champs du formulaire -->
          <div class="water-analyzer__form-fields">
            
            <!-- Adresse (obligatoire) -->
            <div class="water-analyzer__field-group">
              <label for="custom_address" class="water-analyzer__label">
                🏠 Votre adresse *
              </label>
              <input 
                type="text" 
                id="custom_address"
                name="address"
                class="water-analyzer__input"
                placeholder="{{ section.settings.placeholder | default: '01000 Bourg-en-Bresse' }}"
                required
                data-address-input
              >
            </div>

            <!-- Email (obligatoire) -->
            <div class="water-analyzer__field-group">
              <label for="custom_email" class="water-analyzer__label">
                📧 Votre email *
              </label>
              <input 
                type="email" 
                id="custom_email"
                name="email"
                class="water-analyzer__input"
                placeholder="votre@email.com"
                required
                data-email-input
              >
            </div>

            <!-- Nom (optionnel) -->
            {% if section.settings.collect_name %}
            <div class="water-analyzer__field-group">
              <label for="custom_name" class="water-analyzer__label">
                👤 Votre nom
              </label>
              <input 
                type="text" 
                id="custom_name"
                name="name"
                class="water-analyzer__input"
                placeholder="Jean Dupont"
                data-name-input
              >
            </div>
            {% endif %}

            <!-- Option analyse approfondie -->
            <div class="water-analyzer__field-group water-analyzer__advanced-option">
              <label class="water-analyzer__checkbox-label">
                <input 
                  type="checkbox" 
                  name="advanced_analysis"
                  value="true"
                  class="water-analyzer__checkbox"
                  required
                  data-advanced-checkbox
                >
                <span class="water-analyzer__checkmark"></span>
                Je souhaite être contacté pour une analyse approfondie gratuite *
              </label>
            </div>

            <!-- Consentement RGPD -->
            <div class="water-analyzer__field-group water-analyzer__consent">
              <label class="water-analyzer__checkbox-label">
                <input 
                  type="checkbox" 
                  name="consent"
                  value="true"
                  required
                  class="water-analyzer__checkbox"
                  data-consent-checkbox
                >
                <span class="water-analyzer__checkmark"></span>
                J'accepte les CGV et l'utilisation de mes données pour cette analyse *
              </label>
            </div>

          </div>

          <!-- Bouton de soumission -->
          <div class="water-analyzer__submit-section">
            <button 
              type="submit"
              class="water-analyzer__submit-button"
              data-submit-button
            >
              <span class="water-analyzer__button-icon">{{ section.settings.button_icon | default: '🔍' }}</span>
              <span class="water-analyzer__button-text">{{ section.settings.button_text | default: 'Lancer l analyse' }}</span>
            </button>
          </div>

          <!-- Exemples d'adresses -->
          {% if section.settings.show_examples %}
          <div class="water-analyzer__examples">
            <span class="water-analyzer__examples-label">💡 Exemples :</span>
            {% assign examples = section.settings.examples | default: '01000,Gex,Bourg-en-Bresse' | split: ',' %}
            {% for example in examples %}
              <button 
                type="button" 
                class="water-analyzer__example"
                data-example="{{ example | strip }}"
              >
                {{ example | strip }}
              </button>
            {% endfor %}
          </div>
          {% endif %}
          
        </form>

      </div>
    </section>

    <!-- Message de remerciement (caché par défaut) -->
    <section class="water-analyzer__thank-you" data-thank-you style="display: none;">
      <div class="water-analyzer__thank-you-content">
        <h3>✅ Merci pour votre demande !</h3>
        <p>Nous avons bien reçu votre demande d'analyse pour <strong data-submitted-address></strong></p>
        <p>Vous recevrez les résultats détaillés par email sous 24h.</p>
        <div class="water-analyzer__continue">
          <p>En attendant, découvrez un aperçu de la qualité de l'eau dans votre région :</p>
          <div class="water-analyzer__auto-progress">
            <div class="water-analyzer__auto-bar"></div>
          </div>
        </div>
      </div>
    </section>

    <!-- Section d'analyse (cachée par défaut) -->
    <section class="water-analyzer__analysis-section" data-analysis-section style="display: none;">
      
      <!-- Toggle carte -->
      {% if section.settings.enable_map %}
      <div class="water-analyzer__map-toggle">
        <button type="button" class="water-analyzer__map-btn" data-map-toggle>
          <span class="water-analyzer__map-icon">🗺️</span>
          <span class="water-analyzer__map-text">Utiliser la carte</span>
        </button>
      </div>
      {% endif %}

      <!-- Carte interactive -->
      {% if section.settings.enable_map %}
      <div class="water-analyzer__map-container" data-map-container style="display: none;">
        <div class="water-analyzer__map-header">
          <h4>🗺️ Cliquez sur la carte pour sélectionner votre adresse</h4>
          <button type="button" class="water-analyzer__map-close" data-map-close>✕</button>
        </div>
        <div id="water-map-{{ section.id }}" class="water-analyzer__map" data-map></div>
        <div class="water-analyzer__map-info" data-map-info style="display: none;">
          <p><strong>Adresse sélectionnée:</strong> <span data-selected-address></span></p>
          <button type="button" class="water-analyzer__map-confirm" data-map-confirm>
            Analyser cette adresse
          </button>
        </div>
      </div>
      {% endif %}

      <!-- Formulaire d'analyse -->
      <div class="water-analyzer__analysis-form">
        <h3>🔬 Analyse en cours</h3>
        <p>Analyse automatique de l'adresse fournie dans le formulaire</p>
        
        <div class="water-analyzer__input-group">
          <input 
            type="text" 
            id="analysis-input-{{ section.id }}" 
            class="water-analyzer__input"
            placeholder="{{ section.settings.placeholder | default: '01000 Bourg-en-Bresse' }}"
            data-analysis-input
            readonly
          >
          <button 
            type="button"
            class="water-analyzer__button"
            data-analysis-button
            style="display: none;"
          >
            <span class="water-analyzer__button-icon">🔍</span>
            <span class="water-analyzer__button-text">Analyser</span>
          </button>
        </div>
      </div>

      <!-- Loading -->
      <div class="water-analyzer__loading" data-loading>
        <div class="water-analyzer__progress-container">
          <div class="water-analyzer__progress-bar">
            <div class="water-analyzer__progress-fill" data-progress-fill></div>
          </div>
          <div class="water-analyzer__progress-text" data-progress-text">0%</div>
        </div>
        <h4 class="water-analyzer__loading-title">🔍 Analyse en cours...</h4>
        <p class="water-analyzer__loading-text" data-loading-text>
          Étape 1: Localisation de l'adresse...
        </p>
      </div>

      <!-- Résultats -->
      <div class="water-analyzer__results" data-results style="display: none;">
        <!-- Résultats générés par JavaScript -->
      </div>

    </section>

  </div>
</div>

<style>
  .water-analyzer {
    font-family: var(--font-body-family, 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif);
    background: var(--primary-color);
    border-radius: var(--border-radius);
    overflow: hidden;
    box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);
    margin: var(--section-padding) 0;
    color: var(--text-color);
    max-width: 100%;
    position: relative;
  }

  .water-analyzer__header {
    background: var(--secondary-color);
    color: white;
    padding: var(--section-padding) calc(var(--section-padding) * 0.75);
    text-align: center;
  }

  .water-analyzer__title {
    font-size: clamp(1.5rem, 4vw, 2rem);
    margin: 0 0 0.5rem 0;
    font-weight: 700;
    line-height: 1.2;
  }

  .water-analyzer__subtitle {
    margin: 0;
    opacity: 0.9;
    font-size: clamp(0.9rem, 2.5vw, 1.1rem);
  }

  .water-analyzer__icon {
    display: inline-block;
    margin-right: 0.5rem;
  }

  .water-analyzer__content {
    background: white;
    padding: var(--section-padding) calc(var(--section-padding) * 0.75);
  }

  /* Section de recherche */
  .water-analyzer__search {
    background: var(--accent-color);
    padding: var(--section-padding);
    border-radius: calc(var(--border-radius) * 0.75);
    margin-bottom: var(--section-padding);
    color: white;
  }

  .water-analyzer__search-title {
    margin: 0 0 1rem 0;
    font-size: 1.3rem;
    font-weight: 600;
  }

  .water-analyzer__search-description {
    margin: 0 0 1.5rem 0;
    opacity: 0.95;
  }

  /* Message de remerciement */
  .water-analyzer__thank-you {
    background: linear-gradient(135deg, #a8e6cf 0%, #dcedc1 100%);
    padding: var(--section-padding);
    border-radius: calc(var(--border-radius) * 0.75);
    margin-bottom: var(--section-padding);
    text-align: center;
    animation: fadeInUp 0.6s ease-out;
  }

  .water-analyzer__thank-you h3 {
    margin: 0 0 1rem 0;
    color: #2d5a27;
    font-size: 1.5rem;
  }

  .water-analyzer__thank-you p {
    margin: 0.5rem 0;
    color: #2d5a27;
  }

  .water-analyzer__continue {
    margin-top: 1.5rem;
    padding-top: 1.5rem;
    border-top: 2px solid rgba(45, 90, 39, 0.2);
  }

  .water-analyzer__auto-progress {
    background: rgba(45, 90, 39, 0.3);
    border-radius: 10px;
    height: 8px;
    overflow: hidden;
    margin: 1rem auto 0;
    max-width: 300px;
  }

  .water-analyzer__auto-bar {
    background: #2d5a27;
    height: 100%;
    width: 0%;
    border-radius: 10px;
    animation: autoProgress 3s ease-out forwards;
  }

  @keyframes autoProgress {
    0% { width: 0%; }
    100% { width: 100%; }
  }

  /* Champs de formulaire */
  .water-analyzer__form-fields {
    display: grid;
    gap: 1.25rem;
    margin-bottom: 1.5rem;
  }

  .water-analyzer__field-group {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .water-analyzer__label {
    font-weight: 600;
    font-size: 0.95rem;
    opacity: 0.95;
  }

  .water-analyzer__input {
    padding: 0.875rem 1.25rem;
    border: none;
    border-radius: 25px;
    font-size: 1rem;
    background: rgba(255, 255, 255, 0.95);
    outline: none;
    transition: all 0.3s ease;
    font-family: inherit;
  }

  .water-analyzer__input:focus {
    background: white;
    box-shadow: 0 0 0 3px rgba(255, 255, 255, 0.3);
  }

  .water-analyzer__input:read-only {
    background: rgba(255, 255, 255, 0.7);
    cursor: not-allowed;
  }

  /* Cases à cocher */
  .water-analyzer__advanced-option,
  .water-analyzer__consent {
    margin-top: 0.5rem;
  }

  .water-analyzer__checkbox-label {
    display: flex;
    align-items: flex-start;
    gap: 0.75rem;
    cursor: pointer;
    font-size: 0.9rem;
    line-height: 1.4;
  }

  .water-analyzer__checkbox {
    appearance: none;
    width: 20px;
    height: 20px;
    border: 2px solid rgba(255, 255, 255, 0.7);
    border-radius: 4px;
    background: rgba(255, 255, 255, 0.1);
    cursor: pointer;
    position: relative;
    flex-shrink: 0;
    margin-top: 2px;
  }

  .water-analyzer__checkbox:checked {
    background: rgba(255, 255, 255, 0.9);
    border-color: rgba(255, 255, 255, 0.9);
  }

  .water-analyzer__checkbox:checked::after {
    content: '✓';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: var(--accent-color);
    font-weight: bold;
    font-size: 14px;
  }

  /* Bouton de soumission */
  .water-analyzer__submit-section {
    text-align: center;
    margin-bottom: 1.5rem;
  }

  .water-analyzer__submit-button {
    padding: 1rem 2rem;
    background: var(--button-color);
    color: white;
    border: none;
    border-radius: 30px;
    font-size: 1.1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    display: inline-flex;
    align-items: center;
    gap: 0.75rem;
    min-width: 200px;
    justify-content: center;
  }

  .water-analyzer__submit-button:hover:not(:disabled) {
    transform: translateY(-3px);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
  }

  .water-analyzer__submit-button:disabled {
    opacity: 0.7;
    cursor: not-allowed;
    transform: none;
  }

  /* Exemples */
  .water-analyzer__examples {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 0.5rem;
    opacity: 0.9;
    font-size: 0.9rem;
    margin-top: 1rem;
  }

  .water-analyzer__examples-label {
    font-weight: 600;
    margin-right: 0.5rem;
  }

  .water-analyzer__example {
    background: rgba(255, 255, 255, 0.2);
    color: white;
    border: none;
    padding: 0.375rem 0.75rem;
    border-radius: 12px;
    cursor: pointer;
    transition: all 0.2s ease;
    font-size: 0.85rem;
  }

  .water-analyzer__example:hover {
    background: rgba(255, 255, 255, 0.3);
    transform: translateY(-1px);
  }

  /* Section d'analyse */
  .water-analyzer__analysis-section {
    animation: fadeInUp 0.6s ease-out;
  }

  .water-analyzer__analysis-form {
    background: #f8f9fa;
    padding: 1.5rem;
    border-radius: calc(var(--border-radius) * 0.75);
    margin-bottom: 1.5rem;
    text-align: center;
  }

  .water-analyzer__analysis-form h3 {
    margin: 0 0 0.5rem 0;
    color: var(--text-color);
  }

  .water-analyzer__analysis-form p {
    margin: 0 0 1.5rem 0;
    color: #666;
  }

  .water-analyzer__input-group {
    display: flex;
    gap: 0.75rem;
    align-items: stretch;
    flex-wrap: wrap;
    justify-content: center;
  }

  .water-analyzer__input-group .water-analyzer__input {
    flex: 1;
    min-width: 250px;
    background: white;
    color: var(--text-color);
  }

  .water-analyzer__button {
    padding: 0.875rem 1.5rem;
    background: var(--button-color);
    color: white;
    border: none;
    border-radius: 25px;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    white-space: nowrap;
  }

  .water-analyzer__button:hover:not(:disabled) {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
  }

  /* Carte */
  .water-analyzer__map-toggle {
    text-align: center;
    margin-bottom: 1.5rem;
  }

  .water-analyzer__map-btn {
    background: rgba(102, 126, 234, 0.1);
    color: var(--primary-color);
    border: 2px solid var(--primary-color);
    padding: 0.75rem 1.5rem;
    border-radius: 25px;
    cursor: pointer;
    transition: all 0.3s ease;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    font-weight: 600;
  }

  .water-analyzer__map-btn:hover {
    background: var(--primary-color);
    color: white;
    transform: translateY(-2px);
  }

  .water-analyzer__map-container {
    background: white;
    border-radius: 15px;
    margin-bottom: 1.5rem;
    overflow: hidden;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
  }

  .water-analyzer__map-header {
    background: var(--primary-color);
    color: white;
    padding: 1rem 1.5rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .water-analyzer__map-header h4 {
    margin: 0;
    font-size: 1rem;
  }

  .water-analyzer__map-close {
    background: none;
    border: none;
    color: white;
    font-size: 1.5rem;
    cursor: pointer;
    padding: 0;
    width: 30px;
    height: 30px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background 0.2s ease;
  }

  .water-analyzer__map-close:hover {
    background: rgba(255, 255, 255, 0.2);
  }

  .water-analyzer__map {
    height: 400px;
    width: 100%;
    background: #f0f0f0;
  }

  .water-analyzer__map-info {
    padding: 1rem 1.5rem;
    background: #f8f9fa;
    border-top: 1px solid #e9ecef;
  }

  .water-analyzer__map-info p {
    margin: 0 0 1rem 0;
    color: #333;
  }

  .water-analyzer__map-confirm {
    background: var(--button-color);
    color: white;
    border: none;
    padding: 0.75rem 1.5rem;
    border-radius: 25px;
    cursor: pointer;
    font-weight: 600;
    transition: all 0.3s ease;
  }

  .water-analyzer__map-confirm:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
  }

  /* Loading avec barre de progression */
  .water-analyzer__loading {
    text-align: center;
    padding: 3rem 1rem;
  }

  .water-analyzer__progress-container {
    margin-bottom: 2rem;
    max-width: 400px;
    margin-left: auto;
    margin-right: auto;
  }

  .water-analyzer__progress-bar {
    background: #e9ecef;
    border-radius: 10px;
    height: 20px;
    overflow: hidden;
    position: relative;
    margin-bottom: 0.5rem;
  }

  .water-analyzer__progress-fill {
    background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
    height: 100%;
    width: 0%;
    border-radius: 10px;
    transition: width 0.5s ease;
    position: relative;
  }

  .water-analyzer__progress-fill::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
    animation: shimmer 2s infinite;
  }

  @keyframes shimmer {
    0% { transform: translateX(-100%); }
    100% { transform: translateX(100%); }
  }

  .water-analyzer__progress-text {
    font-weight: 600;
    color: var(--primary-color);
    font-size: 1.1rem;
  }

  .water-analyzer__loading-title {
    margin: 0 0 0.5rem 0;
    color: var(--text-color);
    font-size: 1.2rem;
  }

  .water-analyzer__loading-text {
    margin: 0;
    color: #666;
  }

  /* Résultats */
  .water-analyzer__results {
    animation: fadeInUp 0.5s ease-out;
  }

  .water-result {
    border-radius: calc(var(--border-radius) * 0.6);
    padding: 1.5rem;
    margin: 1rem 0;
  }

  .water-result--location {
    background: #f8f9fa;
    border-left: 4px solid var(--primary-color);
  }

  .water-result--quality {
    background: #f8f9fa;
    border-left: 4px solid #28a745;
  }

  .water-result--conformity {
    background: #a8e6cf;
  }

  .water-result--recommendations {
    background: #ffecd2;
  }

  .water-result--warning {
    background: #fff3cd;
    color: #856404;
    border-left: 4px solid #ffc107;
  }

  .water-result--error {
    background: #f8d7da;
    color: #721c24;
    border-left: 4px solid #dc3545;
  }

  .water-result__title {
    margin: 0 0 1rem 0;
    font-size: 1.2rem;
    font-weight: 600;
  }

  .water-result__content p {
    margin: 0.5rem 0;
  }

  /* Animations */
  @keyframes fadeInUp {
    from { 
      opacity: 0; 
      transform: translateY(30px); 
    }
    to { 
      opacity: 1; 
      transform: translateY(0); 
    }
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .water-analyzer {
      margin: 1rem 0;
      border-radius: calc(var(--border-radius) * 0.75);
    }

    .water-analyzer__header {
      padding: 1.5rem 1rem;
    }

    .water-analyzer__content {
      padding: 1.5rem 1rem;
    }

    .water-analyzer__search {
      padding: 1.5rem;
    }

    .water-analyzer__input-group {
      flex-direction: column;
    }

    .water-analyzer__input-group .water-analyzer__input {
      min-width: auto;
    }

    .water-analyzer__examples {
      justify-content: center;
    }

    .water-analyzer__submit-button {
      width: 100%;
    }

    .water-analyzer__map {
      height: 300px;
    }
  }

  @media (max-width: 480px) {
    .water-analyzer__examples {
      flex-direction: column;
      align-items: flex-start;
    }

    .water-analyzer__examples-label {
      margin-bottom: 0.5rem;
    }

    .water-analyzer__map-header {
      flex-direction: column;
      gap: 0.5rem;
      text-align: center;
    }
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .water-analyzer {
      border: 2px solid #000;
    }

    .water-analyzer__submit-button,
    .water-analyzer__button {
      border: 2px solid #000;
    }
  }

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .water-analyzer__submit-button:hover,
    .water-analyzer__button:hover {
      transform: none;
    }

    .water-analyzer__example:hover {
      transform: none;
    }

    .water-analyzer__auto-bar,
    .water-analyzer__progress-fill::after {
      animation: none;
    }

    .water-analyzer__thank-you,
    .water-analyzer__analysis-section,
    .water-analyzer__results {
      animation: none;
    }
  }
</style>

<!-- Leaflet CSS pour la carte -->
{% if section.settings.enable_map %}
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
{% endif %}

<script>
(function() {
  'use strict';
  
  // Configuration avec système de fallback CORS
  const CORS_METHODS = [
    {
      name: 'AllOrigins',
      proxy: 'https://api.allorigins.win/get?url=',
      parse: function(data) { return JSON.parse(data.contents); },
      timeout: 10000
    },
    {
      name: 'ProxyAnywhereHeroku', 
      proxy: 'https://cors-anywhere.herokuapp.com/',
      parse: function(data) { return data; },
      timeout: 8000
    },
    {
      name: 'ThingProxy',
      proxy: 'https://thingproxy.freeboard.io/fetch/',
      parse: function(data) { return data; },
      timeout: 8000
    },
    {
      name: 'ProxyCors',
      proxy: 'https://proxy.cors.sh/',
      parse: function(data) { return data; },
      timeout: 8000
    },
    {
      name: 'Direct',
      proxy: '',
      parse: function(data) { return data; },
      timeout: 5000
    }
  ];

  // Configuration
  const CONFIG = {
    sectionId: '{{ section.id }}',
    enableMap: {{ section.settings.enable_map | default: false }},
    maxRetries: 3,
    cacheTimeout: 300000,
    dateRangeYears: 2,
    shopifyContactEndpoint: '/contact'
  };

  // Variables globales
  let map = null;
  let marker = null;
  let selectedAddress = null;
  let analysisInProgress = false;
  let submittedData = null;
  const cache = new Map();

  // Sélecteurs DOM
  const selectors = {
    formSection: '[data-form-section]',
    customForm: '[data-custom-form]',
    thankYou: '[data-thank-you]',
    submittedAddress: '[data-submitted-address]',
    analysisSection: '[data-analysis-section]',
    analysisInput: '[data-analysis-input]',
    analysisButton: '[data-analysis-button]',
    loading: '[data-loading]',
    loadingText: '[data-loading-text]',
    progressFill: '[data-progress-fill]',
    progressText: '[data-progress-text]',
    results: '[data-results]',
    examples: '[data-example]',
    submitButton: '[data-submit-button]',
    addressInput: '[data-address-input]',
    emailInput: '[data-email-input]',
    nameInput: '[data-name-input]',
    advancedCheckbox: '[data-advanced-checkbox]',
    consentCheckbox: '[data-consent-checkbox]',
    mapToggle: '[data-map-toggle]',
    mapContainer: '[data-map-container]',
    mapElement: '[data-map]',
    mapClose: '[data-map-close]',
    mapInfo: '[data-map-info]',
    mapConfirm: '[data-map-confirm]',
    selectedAddressSpan: '[data-selected-address]'
  };

  // Utilitaires
  const utils = {
    sanitizeHtml: function(str) {
      const div = document.createElement('div');
      div.textContent = str;
      return div.innerHTML;
    },

    formatDate: function(dateString) {
      return new Date(dateString).toLocaleDateString('fr-FR', {
        year: 'numeric',
        month: 'long',
        day: 'numeric'
      });
    },

    getCacheKey: function(address) {
      return 'water_analysis_' + address.toLowerCase().replace(/\s+/g, '_');
    },

    validateEmail: function(email) {
      const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      return re.test(email);
    }
  };

  // Gestion de la progression
  const progressManager = {
    steps: [
      { text: 'Étape 1: Localisation de l\'adresse...', progress: 25 },
      { text: 'Étape 2: Récupération des analyses d\'eau...', progress: 50 },
      { text: 'Étape 3: Analyse des données...', progress: 75 },
      { text: 'Étape 4: Génération du rapport...', progress: 100 }
    ],
    
    currentStep: 0,
    
    updateProgress: function(stepIndex) {
      this.currentStep = stepIndex;
      const step = this.steps[stepIndex];
      
      if (step) {
        const progressFill = document.querySelector(selectors.progressFill);
        const progressText = document.querySelector(selectors.progressText);
        const loadingText = document.querySelector(selectors.loadingText);
        
        if (progressFill) {
          progressFill.style.width = step.progress + '%';
        }
        
        if (progressText) {
          progressText.textContent = step.progress + '%';
        }
        
        if (loadingText) {
          loadingText.textContent = step.text;
        }
      }
    },
    
    reset: function() {
      this.currentStep = 0;
      this.updateProgress(0);
    }
  };

  // Gestion de l'interface
  const ui = {
    showLoading: function() {
      const loading = document.querySelector(selectors.loading);
      const results = document.querySelector(selectors.results);
      
      if (results) results.style.display = 'none';
      if (loading) loading.style.display = 'block';
      
      progressManager.reset();
    },

    hideLoading: function() {
      const loading = document.querySelector(selectors.loading);
      if (loading) loading.style.display = 'none';
    },

    showResults: function(html) {
      const results = document.querySelector(selectors.results);
      if (results) {
        results.innerHTML = html;
        results.style.display = 'block';
        
        setTimeout(function() {
          results.scrollIntoView({ 
            behavior: 'smooth', 
            block: 'start' 
          });
        }, 100);
      }
    },

    showThankYou: function(address) {
      const formSection = document.querySelector(selectors.formSection);
      const thankYou = document.querySelector(selectors.thankYou);
      const submittedAddressEl = document.querySelector(selectors.submittedAddress);
      const analysisSection = document.querySelector(selectors.analysisSection);
      const analysisInput = document.querySelector(selectors.analysisInput);
      
      if (formSection) formSection.style.display = 'none';
      if (thankYou) thankYou.style.display = 'block';
      if (submittedAddressEl) submittedAddressEl.textContent = address;
      if (analysisSection) analysisSection.style.display = 'block';
      if (analysisInput) analysisInput.value = address;
      
      // Lancement automatique de l'analyse après 3 secondes
      setTimeout(function() {
        startAnalysis(address);
      }, 3000);
    },

    toggleSubmitButton: function(disabled, text) {
      const button = document.querySelector(selectors.submitButton);
      if (!button) return;

      button.disabled = disabled;
      
      if (text) {
        const buttonText = button.querySelector('.water-analyzer__button-text');
        const buttonIcon = button.querySelector('.water-analyzer__button-icon');
        
        if (buttonText) buttonText.textContent = text;
        if (buttonIcon) buttonIcon.textContent = disabled ? '⏳' : '🔍';
      }
    }
  };

  // Envoi des données à Shopify
  function sendToShopify(formData) {
    const data = new FormData();
    data.append('contact[email]', formData.email);
    data.append('contact[name]', formData.name || '');
    data.append('contact[body]', `
Demande d'analyse eau potable

Adresse: ${formData.address}
Email: ${formData.email}
Nom: ${formData.name || 'Non renseigné'}
Analyse approfondie: ${formData.advancedAnalysis ? 'Oui' : 'Non'}
Consentement: ${formData.consent ? 'Accepté' : 'Refusé'}

Date: ${new Date().toLocaleString('fr-FR')}
    `);
    data.append('contact[tags]', 'water-analysis,lead');

    return fetch(CONFIG.shopifyContactEndpoint, {
      method: 'POST',
      body: data,
      headers: {
        'Accept': 'application/json'
      }
    });
  }

  // Fonction de fetch avec timeout
  function fetchWithTimeout(url, options) {
    options = options || {};
    const timeout = options.timeout || 5000;
    const fetchOptions = Object.assign({}, options);
    delete fetchOptions.timeout;
    
    const controller = new AbortController();
    const timeoutId = setTimeout(function() {
      controller.abort();
    }, timeout);
    
    fetchOptions.signal = controller.signal;
    
    return fetch(url, fetchOptions).then(function(response) {
      clearTimeout(timeoutId);
      return response;
    }).catch(function(error) {
      clearTimeout(timeoutId);
      throw error;
    });
  }

  // Fonction de fetch avec fallback
  function fetchWithFallback(url, methodIndex, retryCount) {
    methodIndex = methodIndex || 0;
    retryCount = retryCount || 0;
    
    if (methodIndex >= CORS_METHODS.length) {
      throw new Error('Toutes les méthodes de connexion ont échoué. Vérifiez votre connexion internet.');
    }

    const method = CORS_METHODS[methodIndex];
    const proxyUrl = method.proxy ? method.proxy + encodeURIComponent(url) : url;
    
    return fetchWithTimeout(proxyUrl, {
      method: 'GET',
      headers: {
        'Accept': 'application/json',
        'User-Agent': 'WaterAnalyzer/1.0'
      },
      mode: 'cors',
      timeout: method.timeout
    }).then(function(response) {
      if (!response.ok) {
        throw new Error('HTTP ' + response.status + ': ' + response.statusText);
      }
      return response.json();
    }).then(function(data) {
      return method.parse(data);
    }).catch(function(error) {
      if (retryCount < CONFIG.maxRetries) {
        return new Promise(function(resolve) {
          setTimeout(resolve, 1000 * (retryCount + 1));
        }).then(function() {
          return fetchWithFallback(url, methodIndex, retryCount + 1);
        });
      }
      
      return fetchWithFallback(url, methodIndex + 1, 0);
    });
  }

  // Fonction d'analyse
  function analyzeWater(address) {
    if (!address || !address.trim()) {
      throw new Error('Veuillez saisir une adresse valide');
    }

    if (analysisInProgress) {
      return Promise.reject(new Error('Une analyse est déjà en cours'));
    }

    analysisInProgress = true;
    const cacheKey = utils.getCacheKey(address);
    
    if (cache.has(cacheKey)) {
      const cached = cache.get(cacheKey);
      if (Date.now() - cached.timestamp < CONFIG.cacheTimeout) {
        analysisInProgress = false;
        return Promise.resolve(cached.data);
      }
    }

    ui.showLoading();
    progressManager.updateProgress(0);
    
    const addressUrl = 'https://api-adresse.data.gouv.fr/search/?q=' + encodeURIComponent(address) + '&limit=5';
    
    return fetchWithFallback(addressUrl).then(function(locationData) {
      if (!locationData || !locationData.features || !locationData.features.length) {
        throw new Error('Adresse non trouvée. Essayez avec le code postal ou le nom de la ville.');
      }

      const location = locationData.features[0];
      const cityCode = location.properties.citycode;
      
      progressManager.updateProgress(1);
      
      const dateLimit = new Date();
      dateLimit.setFullYear(dateLimit.getFullYear() - CONFIG.dateRangeYears);
      const dateLimitStr = dateLimit.toISOString().split('T')[0];

      const waterUrl = 'https://hubeau.eaufrance.fr/api/v1/qualite_eau_potable/resultats_dis?code_commune=' + cityCode + '&date_min_prelevement=' + dateLimitStr + '&size=200&format=json&sort=desc';
      
      return fetchWithFallback(waterUrl).then(function(qualityData) {
        progressManager.updateProgress(2);

        // Simulation d'un délai pour l'analyse
        return new Promise(function(resolve) {
          setTimeout(function() {
            progressManager.updateProgress(3);
            
            const result = {
              location: location,
              qualityData: qualityData,
              timestamp: Date.now()
            };

            cache.set(cacheKey, {
              data: result,
              timestamp: Date.now()
            });

            resolve(result);
          }, 1000);
        });
      });
    }).finally(function() {
      analysisInProgress = false;
    });
  }

  // Génération du HTML des résultats
  function generateResultsHtml(location, qualityResponse) {
    const props = location.properties;
    let html = '';

    // Informations sur l'adresse
    html += '<div class="water-result water-result--location">';
    html += '<h3 class="water-result__title">📍 Adresse analysée</h3>';
    html += '<div class="water-result__content">';
    html += '<p><strong>' + utils.sanitizeHtml(props.label) + '</strong></p>';
    html += '<p>🏘️ ' + utils.sanitizeHtml(props.city) + ' (' + (props.postcode || 'N/A') + ')</p>';
    html += '<p>🆔 Code INSEE: ' + props.citycode + '</p>';
    if (props.context) {
      html += '<p>📍 ' + utils.sanitizeHtml(props.context) + '</p>';
    }
    html += '</div></div>';

    if (qualityResponse && qualityResponse.data && qualityResponse.data.length > 0) {
      const analyses = qualityResponse.data;
      const latest = analyses[0];
      const lastDate = utils.formatDate(latest.date_prelevement);

      // Informations générales
      html += '<div class="water-result water-result--quality">';
      html += '<h3 class="water-result__title">📊 Rapport Qualité - ' + utils.sanitizeHtml(props.city) + '</h3>';
      html += '<div class="water-result__content">';
      html += '<p><strong>Dernière analyse:</strong> ' + lastDate + '</p>';
      html += '<p><strong>Total analyses:</strong> ' + analyses.length + ' sur ' + CONFIG.dateRangeYears + ' ans</p>';
      if (latest.nom_distributeur) {
        html += '<p><strong>Distributeur:</strong> ' + utils.sanitizeHtml(latest.nom_distributeur) + '</p>';
      }
      if (latest.nom_installation) {
        html += '<p><strong>Installation:</strong> ' + utils.sanitizeHtml(latest.nom_installation) + '</p>';
      }
      html += '</div></div>';

      // Analyse de conformité
      const bactConform = analyses.filter(function(d) { return d.conformite_limites_bact_prelevement === 'C'; }).length;
      const bactTotal = analyses.filter(function(d) { return d.conformite_limites_bact_prelevement; }).length;
      
      const physConform = analyses.filter(function(d) { return d.conformite_limites_pc_prelevement === 'C'; }).length;
      const physTotal = analyses.filter(function(d) { return d.conformite_limites_pc_prelevement; }).length;

      if (bactTotal > 0 || physTotal > 0) {
        html += '<div class="water-result water-result--conformity">';
        html += '<h4 class="water-result__title">✅ Conformité Réglementaire</h4>';
        html += '<div class="water-result__content">';

        if (bactTotal > 0) {
          const bactPercent = (bactConform / bactTotal) * 100;
          html += '<p>🦠 Qualité bactériologique: <strong>' + bactPercent.toFixed(1) + '%</strong> conforme (' + bactConform + '/' + bactTotal + ' analyses)</p>';
        }

        if (physTotal > 0) {
          const physPercent = (physConform / physTotal) * 100;
          html += '<p>⚗️ Paramètres physico-chimiques: <strong>' + physPercent.toFixed(1) + '%</strong> conforme (' + physConform + '/' + physTotal + ' analyses)</p>';
        }

        html += '</div></div>';
      }

      // Recommandations
      html += '<div class="water-result water-result--recommendations">';
      html += '<h4 class="water-result__title">💡 Recommandations</h4>';
      html += '<div class="water-result__content">';
      html += '<p>• 🔬 Analyses conformes aux normes françaises en vigueur</p>';
      html += '<p>• 📞 En cas de doute, contactez votre distributeur d\'eau</p>';
      html += '<p>• 💧 Consommez 1,5 à 2L d\'eau par jour selon vos besoins</p>';
      html += '<p>• 🌡️ Conservez l\'eau du robinet au frais et consommez-la rapidement</p>';
      html += '</div></div>';

    } else {
      html += '<div class="water-result water-result--warning">';
      html += '<h4 class="water-result__title">⚠️ Aucune analyse récente disponible</h4>';
      html += '<div class="water-result__content">';
      html += '<p>Aucune donnée d\'analyse trouvée pour <strong>' + utils.sanitizeHtml(props.city) + '</strong> sur les ' + CONFIG.dateRangeYears + ' dernières années.</p>';
      html += '<p>Cette commune peut être desservie par un réseau intercommunal ou les données peuvent ne pas être encore disponibles dans la base nationale.</p>';
      html += '<p>💡 Contactez votre mairie ou votre distributeur d\'eau pour plus d\'informations.</p>';
      html += '</div></div>';
    }

    return html;
  }

  // Affichage d'erreur
  function showError(message) {
    const html = '<div class="water-result water-result--error">' +
      '<h4 class="water-result__title">❌ Erreur</h4>' +
      '<div class="water-result__content">' +
      '<p>' + utils.sanitizeHtml(message) + '</p>' +
      '<p>💡 <strong>Suggestions :</strong></p>' +
      '<p>• Essayez avec un code postal (ex: 01000)</p>' +
      '<p>• Vérifiez l\'orthographe de votre adresse</p>' +
      '<p>• Vérifiez votre connexion internet</p>' +
      '</div></div>';
    ui.showResults(html);
  }

  // Lancement de l'analyse
  function startAnalysis(address) {
    analyzeWater(address).then(function(result) {
      const html = generateResultsHtml(result.location, result.qualityData);
      ui.showResults(html);
    }).catch(function(error) {
      showError(error.message);
    }).finally(function() {
      ui.hideLoading();
    });
  }

  // Gestionnaire de soumission du formulaire
  function handleFormSubmit(e) {
    e.preventDefault();
    
    const addressInput = document.querySelector(selectors.addressInput);
    const emailInput = document.querySelector(selectors.emailInput);
    const nameInput = document.querySelector(selectors.nameInput);
    const advancedCheckbox = document.querySelector(selectors.advancedCheckbox);
    const consentCheckbox = document.querySelector(selectors.consentCheckbox);
    
    const formData = {
      address: addressInput ? addressInput.value.trim() : '',
      email: emailInput ? emailInput.value.trim() : '',
      name: nameInput ? nameInput.value.trim() : '',
      advancedAnalysis: advancedCheckbox ? advancedCheckbox.checked : false,
      consent: consentCheckbox ? consentCheckbox.checked : false
    };

    // Validation
    if (!formData.address) {
      alert('Veuillez saisir une adresse');
      return;
    }

    if (!formData.email || !utils.validateEmail(formData.email)) {
      alert('Veuillez saisir un email valide');
      return;
    }

    if (!formData.advancedAnalysis) {
      alert('Veuillez accepter d\'être contacté pour l\'analyse approfondie');
      return;
    }

    if (!formData.consent) {
      alert('Veuillez accepter les CGV et l\'utilisation de vos données');
      return;
    }

    ui.toggleSubmitButton(true, 'Envoi en cours...');
    submittedData = formData;

    // Envoi à Shopify (optionnel, en arrière-plan)
    sendToShopify(formData).catch(function(error) {
      console.warn('Erreur envoi Shopify:', error);
    });

    // Affichage du message de remerciement et lancement de l'analyse
    setTimeout(function() {
      ui.showThankYou(formData.address);
    }, 1000);
  }

  // Gestionnaire des exemples
  function setExample(address) {
    const input = document.querySelector(selectors.addressInput);
    if (input) {
      input.value = address;
      input.focus();
    }
  }

  // Initialisation
  function init() {
    console.log('🌊 Water Analyzer (No Captcha) initialized');

    // Gestionnaire du formulaire personnalisé
    const customForm = document.querySelector(selectors.customForm);
    if (customForm) {
      customForm.addEventListener('submit', handleFormSubmit);
    }

    // Gestionnaire des exemples
    const examples = document.querySelectorAll(selectors.examples);
    examples.forEach(function(example) {
      example.addEventListener('click', function() {
        const address = this.dataset.example;
        setExample(address);
        
        this.style.transform = 'scale(0.95)';
        setTimeout(() => {
          this.style.transform = '';
        }, 150);
      });
    });

    // Gestionnaire Enter sur les inputs
    const inputs = document.querySelectorAll(selectors.addressInput + ', ' + selectors.emailInput + ', ' + selectors.nameInput);
    inputs.forEach(function(input) {
      input.addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
          e.preventDefault();
          const form = this.closest('form');
          if (form) {
            form.dispatchEvent(new Event('submit'));
          }
        }
      });
    });
  }

  // Démarrage
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', init);
  } else {
    init();
  }

})();
</script>

{% schema %}
{
  "name": "Analyseur Eau",
  "settings": [
    {
      "type": "header",
      "content": "Configuration générale"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Titre principal",
      "default": "Analyseur Qualité Eau Potable",
      "info": "Le titre affiché en haut de la section"
    },
    {
      "type": "text",
      "id": "subtitle",
      "label": "Sous-titre",
      "default": "Découvrez la qualité de l'eau à votre adresse",
      "info": "Description affichée sous le titre"
    },
    {
      "type": "text",
      "id": "search_title",
      "label": "Titre de la section recherche",
      "default": "Analysez votre eau",
      "info": "Titre de la zone de recherche"
    },
    {
      "type": "textarea",
      "id": "search_description",
      "label": "Description de la recherche",
      "default": "Saisissez votre adresse pour obtenir un rapport de qualité détaillé",
      "info": "Texte explicatif pour la recherche"
    },
    {
      "type": "text",
      "id": "placeholder",
      "label": "Placeholder du champ adresse",
      "default": "01000 Bourg-en-Bresse",
      "info": "Texte d'exemple dans le champ de saisie"
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Texte du bouton",
      "default": "Lancer l'analyse",
      "info": "Texte affiché sur le bouton de soumission"
    },
    {
      "type": "header",
      "content": "Champs du formulaire"
    },
    {
      "type": "checkbox",
      "id": "collect_name",
      "label": "Collecter le nom",
      "default": true,
      "info": "Ajouter un champ nom au formulaire"
    },
    {
      "type": "checkbox",
      "id": "show_examples",
      "label": "Afficher les exemples",
      "default": true,
      "info": "Affiche les boutons d'exemples d'adresses"
    },
    {
      "type": "text",
      "id": "examples",
      "label": "Exemples d'adresses",
      "default": "01000,Gex,Bourg-en-Bresse",
      "info": "Liste d'exemples séparés par des virgules"
    },
    {
      "type": "checkbox",
      "id": "enable_map",
      "label": "Activer la carte interactive",
      "default": false,
      "info": "Permet de sélectionner une adresse sur une carte"
    },
    {
      "type": "header",
      "content": "Icônes et emojis"
    },
    {
      "type": "text",
      "id": "header_icon",
      "label": "Icône du header",
      "default": "🌊",
      "info": "Emoji affiché dans le titre principal"
    },
    {
      "type": "text",
      "id": "search_icon",
      "label": "Icône de recherche",
      "default": "🏠",
      "info": "Emoji affiché dans le titre de recherche"
    },
    {
      "type": "text",
      "id": "button_icon",
      "label": "Icône du bouton",
      "default": "🔍",
      "info": "Emoji affiché dans le bouton"
    },
    {
      "type": "header",
      "content": "Couleurs et design"
    },
    {
      "type": "color",
      "id": "primary_color",
      "label": "Couleur primaire",
      "default": "#667eea",
      "info": "Couleur principale du gradient de fond"
    },
    {
      "type": "color",
      "id": "secondary_color",
      "label": "Couleur secondaire",
      "default": "#764ba2",
      "info": "Couleur secondaire du gradient de fond"
    },
    {
      "type": "color",
      "id": "accent_color",
      "label": "Couleur d'accent",
      "default": "#f093fb",
      "info": "Couleur de la zone de recherche"
    },
    {
      "type": "color",
      "id": "button_color",
      "label": "Couleur du bouton",
      "default": "#ff6b6b",
      "info": "Couleur du bouton d'analyse"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Couleur du texte",
      "default": "#333333",
      "info": "Couleur du texte principal"
    },
    {
      "type": "range",
      "id": "border_radius",
      "label": "Arrondi des bords",
      "min": 0,
      "max": 50,
      "step": 5,
      "default": 20,
      "unit": "px",
      "info": "Arrondi des coins de la section"
    },
    {
      "type": "range",
      "id": "section_padding",
      "label": "Espacement interne",
      "min": 1,
      "max": 5,
      "step": 1,
      "default": 2,
      "unit": "rem",
      "info": "Espacement interne de la section"
    },
    {
      "type": "header",
      "content": "Configuration technique"
    },
    {
      "type": "text",
      "id": "contact_tags",
      "label": "Tags de contact",
      "default": "lead,water-analysis",
      "info": "Tags ajoutés aux contacts (séparés par des virgules)"
    }
  ],
  "presets": [
    {
      "name": "Analyseur Eau"
    }
  ]
}
{% endschema %}