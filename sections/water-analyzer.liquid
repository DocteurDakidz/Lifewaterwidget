<!-- Analyseur Eau Potable - Version avec Collections Shopify Dynamiques -->
<div class="water-analyzer" data-section-id="{{ section.id }}" style="
  --primary-color: {{ section.settings.primary_color | default: '#2563eb' }};
  --secondary-color: {{ section.settings.secondary_color | default: '#1e40af' }};
  --accent-color: {{ section.settings.accent_color | default: '#3b82f6' }};
  --button-color: {{ section.settings.button_color | default: '#ef4444' }};
  --text-color: {{ section.settings.text_color | default: '#1f2937' }};
  --border-radius: {{ section.settings.border_radius | default: 16 }}px;
  --section-padding: {{ section.settings.section_padding | default: 2 }}rem;
">
  <!-- Header -->
  <header class="water-analyzer__header">
    <h2 class="water-analyzer__title">
      <span class="water-analyzer__icon">{{ section.settings.header_icon | default: 'üåä' }}</span>
      {{ section.settings.title | default: 'Analyseur Qualit√© Eau Potable' }}
    </h2>
    <p class="water-analyzer__subtitle">
      {{ section.settings.subtitle | default: 'D√©couvrez la qualit√© de l eau √† votre adresse' }}
    </p>
  </header>

  <!-- Main Content -->
  <div class="water-analyzer__content">
    
    <!-- Search Section -->
    <section class="water-analyzer__search">
      <h3 class="water-analyzer__search-title">
        <span class="water-analyzer__icon">{{ section.settings.search_icon | default: 'üè†' }}</span>
        {{ section.settings.search_title | default: 'Analysez votre eau' }}
      </h3>
      <p class="water-analyzer__search-description">
        {{ section.settings.search_description | default: 'Saisissez votre adresse pour obtenir un rapport de qualit√© d√©taill√©' }}
      </p>
      
      <form class="water-analyzer__form" data-water-form>
        <div class="water-analyzer__input-group">
          <input 
            type="text" 
            id="water-input-{{ section.id }}" 
            class="water-analyzer__input"
            placeholder="{{ section.settings.placeholder | default: '01000 Bourg-en-Bresse' }}"
            autocomplete="address-line1"
            required
            aria-label="Adresse √† analyser"
          >
          <button 
            type="submit"
            class="water-analyzer__button"
            data-water-button
            aria-label="Lancer l analyse"
          >
            <span class="water-analyzer__button-icon">{{ section.settings.button_icon | default: 'üîç' }}</span>
            <span class="water-analyzer__button-text">{{ section.settings.button_text | default: 'Analyser' }}</span>
          </button>
        </div>

        <!-- Examples -->
        {% if section.settings.show_examples %}
        <div class="water-analyzer__examples">
          <span class="water-analyzer__examples-label">üí° Exemples :</span>
          {% assign examples = section.settings.examples | default: '01000,Gex,Bourg-en-Bresse' | split: ',' %}
          {% for example in examples %}
            <button 
              type="button" 
              class="water-analyzer__example"
              data-example="{{ example | strip }}"
            >
              {{ example | strip }}
            </button>
          {% endfor %}
        </div>
        {% endif %}
      </form>
    </section>

    <!-- Debug Info (hidden by default) -->
    {% if section.settings.debug_mode %}
    <div class="water-analyzer__debug" data-debug-info style="display: none;">
      <strong>Debug :</strong> 
      <span data-debug-text>En attente...</span>
    </div>
    {% endif %}

    <!-- Enhanced Loading State with Progress -->
    <div class="water-analyzer__loading" data-loading style="display: none;">
      <div class="water-analyzer__progress-container">
        <div class="water-analyzer__progress-bar">
          <div class="water-analyzer__progress-fill" data-progress-fill></div>
        </div>
        <div class="water-analyzer__progress-percentage" data-progress-percentage>0%</div>
      </div>
      
      <div class="water-analyzer__loading-steps">
        <div class="water-analyzer__step" data-step="1">
          <div class="water-analyzer__step-icon">üìç</div>
          <div class="water-analyzer__step-text">G√©olocalisation</div>
          <div class="water-analyzer__step-status" data-step-status="1">‚è≥</div>
        </div>
        <div class="water-analyzer__step" data-step="2">
          <div class="water-analyzer__step-icon">üîç</div>
          <div class="water-analyzer__step-text">Recherche donn√©es</div>
          <div class="water-analyzer__step-status" data-step-status="2">‚è≥</div>
        </div>
        <div class="water-analyzer__step" data-step="3">
          <div class="water-analyzer__step-icon">üìä</div>
          <div class="water-analyzer__step-text">Analyse qualit√©</div>
          <div class="water-analyzer__step-status" data-step-status="3">‚è≥</div>
        </div>
        <div class="water-analyzer__step" data-step="4">
          <div class="water-analyzer__step-icon">üõçÔ∏è</div>
          <div class="water-analyzer__step-text">Recommandations</div>
          <div class="water-analyzer__step-status" data-step-status="4">‚è≥</div>
        </div>
      </div>
      
      <h4 class="water-analyzer__loading-title">{{ section.settings.loading_icon | default: 'üîç' }} Analyse en cours...</h4>
      <p class="water-analyzer__loading-text" data-loading-text">
        √âtape 1: Localisation de l adresse...
      </p>
    </div>

    <!-- Results -->
    <div class="water-analyzer__results" data-results style="display: none;" role="region" aria-live="polite">
      <!-- Results will be populated by JavaScript -->
    </div>
  </div>
</div>

<style>
  .water-analyzer {
    font-family: var(--font-body-family, 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif);
    background: var(--primary-color);
    border-radius: var(--border-radius);
    overflow: hidden;
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
    margin: var(--section-padding) 0;
    color: var(--text-color);
    max-width: 100%;
    position: relative;
  }

  .water-analyzer__header {
    background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
    color: white;
    padding: var(--section-padding) calc(var(--section-padding) * 0.75);
    text-align: center;
  }

  .water-analyzer__title {
    font-size: clamp(1.5rem, 4vw, 2rem);
    margin: 0 0 0.5rem 0;
    font-weight: 700;
    line-height: 1.2;
  }

  .water-analyzer__subtitle {
    margin: 0;
    opacity: 0.9;
    font-size: clamp(0.9rem, 2.5vw, 1.1rem);
  }

  .water-analyzer__icon {
    display: inline-block;
    margin-right: 0.5rem;
  }

  .water-analyzer__content {
    background: white;
    padding: var(--section-padding) calc(var(--section-padding) * 0.75);
  }

  .water-analyzer__search {
    background: var(--accent-color);
    padding: var(--section-padding);
    border-radius: calc(var(--border-radius) * 0.75);
    margin-bottom: var(--section-padding);
    color: white;
  }

  .water-analyzer__search-title {
    margin: 0 0 1rem 0;
    font-size: 1.3rem;
    font-weight: 600;
  }

  .water-analyzer__search-description {
    margin: 0 0 1.5rem 0;
    opacity: 0.95;
  }

  .water-analyzer__form {
    width: 100%;
  }

  .water-analyzer__input-group {
    display: flex;
    gap: 0.75rem;
    align-items: stretch;
    flex-wrap: wrap;
    margin-bottom: 1rem;
  }

  .water-analyzer__input {
    flex: 1;
    min-width: 250px;
    padding: 0.875rem 1.25rem;
    border: none;
    border-radius: 25px;
    font-size: 1rem;
    background: rgba(255, 255, 255, 0.95);
    outline: none;
    transition: all 0.3s ease;
  }

  .water-analyzer__input:focus {
    background: white;
    box-shadow: 0 0 0 3px rgba(255, 255, 255, 0.3);
  }

  .water-analyzer__button {
    padding: 0.875rem 1.5rem;
    background: var(--button-color);
    color: white;
    border: none;
    border-radius: 25px;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    white-space: nowrap;
  }

  .water-analyzer__button:hover:not(:disabled) {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(239, 68, 68, 0.4);
  }

  .water-analyzer__button:disabled {
    opacity: 0.7;
    cursor: not-allowed;
    transform: none;
  }

  .water-analyzer__examples {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 0.5rem;
    opacity: 0.9;
    font-size: 0.9rem;
  }

  .water-analyzer__examples-label {
    font-weight: 600;
    margin-right: 0.5rem;
  }

  .water-analyzer__example {
    background: rgba(255, 255, 255, 0.2);
    color: white;
    border: none;
    padding: 0.375rem 0.75rem;
    border-radius: 12px;
    cursor: pointer;
    transition: all 0.2s ease;
    font-size: 0.85rem;
  }

  .water-analyzer__example:hover {
    background: rgba(255, 255, 255, 0.3);
    transform: translateY(-1px);
  }

  .water-analyzer__debug {
    background: #e3f2fd;
    padding: 1rem;
    border-radius: 8px;
    margin-bottom: 1.5rem;
    font-family: 'Courier New', monospace;
    font-size: 0.8rem;
    border-left: 4px solid #2196f3;
  }

  /* Enhanced Loading Styles */
  .water-analyzer__loading {
    text-align: center;
    padding: 3rem 1rem;
  }

  .water-analyzer__progress-container {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 2rem;
    max-width: 400px;
    margin-left: auto;
    margin-right: auto;
  }

  .water-analyzer__progress-bar {
    flex: 1;
    height: 8px;
    background: #e5e7eb;
    border-radius: 4px;
    overflow: hidden;
    position: relative;
  }

  .water-analyzer__progress-fill {
    height: 100%;
    background: linear-gradient(90deg, var(--primary-color), var(--accent-color));
    border-radius: 4px;
    transition: width 0.5s ease;
    width: 0%;
  }

  .water-analyzer__progress-percentage {
    font-weight: 600;
    color: var(--primary-color);
    min-width: 40px;
  }

  .water-analyzer__loading-steps {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
    gap: 1rem;
    margin-bottom: 2rem;
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
  }

  .water-analyzer__step {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    padding: 1rem;
    background: #f9fafb;
    border-radius: 12px;
    transition: all 0.3s ease;
  }

  .water-analyzer__step.active {
    background: var(--accent-color);
    color: white;
    transform: scale(1.05);
  }

  .water-analyzer__step.completed {
    background: #10b981;
    color: white;
  }

  .water-analyzer__step.error {
    background: #ef4444;
    color: white;
  }

  .water-analyzer__step-icon {
    font-size: 1.5rem;
  }

  .water-analyzer__step-text {
    font-size: 0.875rem;
    font-weight: 600;
    text-align: center;
  }

  .water-analyzer__step-status {
    font-size: 1rem;
  }

  .water-analyzer__loading-title {
    margin: 0 0 0.5rem 0;
    color: var(--text-color);
    font-size: 1.2rem;
  }

  .water-analyzer__loading-text {
    margin: 0;
    color: #6b7280;
  }

  .water-analyzer__results {
    animation: water-fade-in 0.5s ease-out;
  }

  /* Product Recommendations Styles */
  .water-recommendations {
    background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);
    border-radius: calc(var(--border-radius) * 0.75);
    padding: 2rem;
    margin: 2rem 0;
    border-left: 4px solid var(--primary-color);
  }

  .water-recommendations__header {
    text-align: center;
    margin-bottom: 2rem;
  }

  .water-recommendations__title {
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--primary-color);
    margin: 0 0 0.5rem 0;
  }

  .water-recommendations__subtitle {
    color: #6b7280;
    margin: 0;
  }

  .water-recommendations__score {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    background: white;
    padding: 0.75rem 1.5rem;
    border-radius: 25px;
    font-weight: 600;
    margin: 1rem 0;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  .water-recommendations__products {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 1.5rem;
    margin-top: 2rem;
  }

  .water-product-card {
    background: white;
    border-radius: 16px;
    padding: 1.5rem;
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    border: 2px solid transparent;
  }

  .water-product-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 12px 35px rgba(0, 0, 0, 0.15);
    border-color: var(--primary-color);
  }

  .water-product-card__header {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    margin-bottom: 1rem;
  }

  .water-product-card__icon {
    font-size: 2rem;
  }

  .water-product-card__title {
    font-size: 1.2rem;
    font-weight: 600;
    color: var(--text-color);
    margin: 0;
  }

  .water-product-card__description {
    color: #6b7280;
    margin: 0 0 1.5rem 0;
    line-height: 1.5;
  }

  .water-product-card__cta {
    background: var(--primary-color);
    color: white;
    text-decoration: none;
    padding: 0.75rem 1.5rem;
    border-radius: 25px;
    font-weight: 600;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    transition: all 0.3s ease;
  }

  .water-product-card__cta:hover {
    background: var(--secondary-color);
    transform: translateY(-2px);
    text-decoration: none;
    color: white;
  }

  /* Email Collection */
  .water-email-collection {
    background: linear-gradient(135deg, #fef3c7 0%, #fde68a 100%);
    border-radius: 16px;
    padding: 2rem;
    margin: 2rem 0;
    text-align: center;
  }

  .water-email-collection__title {
    font-size: 1.3rem;
    font-weight: 600;
    color: #92400e;
    margin: 0 0 1rem 0;
  }

  .water-email-collection__form {
    display: flex;
    gap: 0.75rem;
    max-width: 400px;
    margin: 0 auto;
  }

  .water-email-collection__input {
    flex: 1;
    padding: 0.75rem 1rem;
    border: 2px solid #d97706;
    border-radius: 25px;
    outline: none;
    font-size: 1rem;
  }

  .water-email-collection__button {
    background: #d97706;
    color: white;
    border: none;
    padding: 0.75rem 1.5rem;
    border-radius: 25px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .water-email-collection__button:hover {
    background: #b45309;
    transform: translateY(-2px);
  }

  /* Result Styles */
  .water-result {
    border-radius: calc(var(--border-radius) * 0.6);
    padding: 1.5rem;
    margin: 1rem 0;
  }

  .water-result--location {
    background: #f8f9fa;
    border-left: 4px solid var(--primary-color);
  }

  .water-result--quality {
    background: #f8f9fa;
    border-left: 4px solid #10b981;
  }

  .water-result--warning {
    background: #fef3c7;
    color: #92400e;
    border-left: 4px solid #f59e0b;
  }

  .water-result--error {
    background: #fee2e2;
    color: #dc2626;
    border-left: 4px solid #ef4444;
  }

  .water-result__title {
    margin: 0 0 1rem 0;
    font-size: 1.2rem;
    font-weight: 600;
  }

  .water-result__content p {
    margin: 0.5rem 0;
  }

  .water-result__content p:first-child {
    margin-top: 0;
  }

  .water-result__content p:last-child {
    margin-bottom: 0;
  }

  /* Animations */
  @keyframes water-fade-in {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .water-analyzer {
      margin: 1rem 0;
      border-radius: calc(var(--border-radius) * 0.75);
    }

    .water-analyzer__header {
      padding: 1.5rem 1rem;
    }

    .water-analyzer__content {
      padding: 1.5rem 1rem;
    }

    .water-analyzer__search {
      padding: 1.5rem;
    }

    .water-analyzer__input-group {
      flex-direction: column;
    }

    .water-analyzer__input {
      min-width: auto;
    }

    .water-analyzer__examples {
      justify-content: center;
    }

    .water-recommendations__products {
      grid-template-columns: 1fr;
    }

    .water-email-collection__form {
      flex-direction: column;
    }

    .water-analyzer__loading-steps {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (max-width: 480px) {
    .water-analyzer__examples {
      flex-direction: column;
      align-items: flex-start;
    }

    .water-analyzer__examples-label {
      margin-bottom: 0.5rem;
    }

    .water-analyzer__loading-steps {
      grid-template-columns: 1fr;
    }
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .water-analyzer {
      border: 2px solid #000;
    }

    .water-analyzer__button {
      border: 2px solid #000;
    }
  }

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .water-analyzer__button:hover {
      transform: none;
    }

    .water-analyzer__example:hover {
      transform: none;
    }

    .water-analyzer__results {
      animation: none;
    }

    .water-product-card:hover {
      transform: none;
    }
  }
</style>

<script>
(function() {
  'use strict';
  
  // Configuration avec syst√®me de fallback CORS am√©lior√©
  const CORS_METHODS = [
    {
      name: 'AllOrigins',
      proxy: 'https://api.allorigins.win/get?url=',
      parse: function(data) { return JSON.parse(data.contents); },
      timeout: 10000
    },
    {
      name: 'ProxyAnywhereHeroku', 
      proxy: 'https://cors-anywhere.herokuapp.com/',
      parse: function(data) { return data; },
      timeout: 8000
    },
    {
      name: 'ThingProxy',
      proxy: 'https://thingproxy.freeboard.io/fetch/',
      parse: function(data) { return data; },
      timeout: 8000
    },
    {
      name: 'ProxyCors',
      proxy: 'https://proxy.cors.sh/',
      parse: function(data) { return data; },
      timeout: 8000
    },
    {
      name: 'Direct',
      proxy: '',
      parse: function(data) { return data; },
      timeout: 5000
    }
  ];

  // Configuration globale avec collections Shopify
  const CONFIG = {
    sectionId: '{{ section.id }}',
    debugMode: {{ section.settings.debug_mode | default: false }},
    maxRetries: 3,
    cacheTimeout: 300000, // 5 minutes
    dateRangeYears: 2,
    
    // Collections Shopify configur√©es dynamiquement
    collections: {
      excellent: {
        handle: '{{ section.settings.collection_excellent.handle | default: "" }}',
        title: '{{ section.settings.collection_excellent.title | default: "Carafes filtrantes" }}',
        icon: 'ü•§',
        description: 'Am√©liorez le go√ªt de votre excellente eau'
      },
      good_calcaire: {
        handle: '{{ section.settings.collection_adoucisseurs.handle | default: "" }}',
        title: '{{ section.settings.collection_adoucisseurs.title | default: "Adoucisseurs" }}',
        icon: 'üíß',
        description: 'R√©duisez le calcaire pour prot√©ger vos √©quipements'
      },
      good_standard: {
        handle: '{{ section.settings.collection_charbon.handle | default: "" }}',
        title: '{{ section.settings.collection_charbon.title | default: "Filtres charbon" }}',
        icon: 'üî¨',
        description: 'Filtration au charbon actif pour une eau pure'
      },
      average_multi: {
        handle: '{{ section.settings.collection_systemes.handle | default: "" }}',
        title: '{{ section.settings.collection_systemes.title | default: "Syst√®mes complets" }}',
        icon: 'üè≠',
        description: 'Solution compl√®te de traitement'
      },
      poor_uv: {
        handle: '{{ section.settings.collection_uv.handle | default: "" }}',
        title: '{{ section.settings.collection_uv.title | default: "Syst√®mes UV" }}',
        icon: 'üîÜ',
        description: 'St√©rilisation UV pour s√©curiser votre eau'
      },
      dangerous: {
        handle: '{{ section.settings.collection_osmoseurs.handle | default: "" }}',
        title: '{{ section.settings.collection_osmoseurs.title | default: "Osmoseurs" }}',
        icon: 'üõ°Ô∏è',
        description: 'Purification maximale par osmose inverse'
      },
      maintenance: {
        handle: '{{ section.settings.collection_maintenance.handle | default: "" }}',
        title: '{{ section.settings.collection_maintenance.title | default: "Maintenance" }}',
        icon: 'üîß',
        description: 'Cartouches et consommables'
      }
    },
    
    // Configuration email
    enableEmailCollection: {{ section.settings.enable_email_collection | default: false }},
    emailWebhook: '{{ section.settings.email_webhook | default: "" }}'
  };

  // Variables globales
  let currentStep = 0;
  const totalSteps = 4;
  const cache = new Map();

  // Selecteurs DOM
  const selectors = {
    form: '[data-water-form]',
    input: '#water-input-' + CONFIG.sectionId,
    button: '[data-water-button]',
    loading: '[data-loading]',
    loadingText: '[data-loading-text]',
    results: '[data-results]',
    debugInfo: '[data-debug-info]',
    debugText: '[data-debug-text]',
    examples: '[data-example]',
    progressFill: '[data-progress-fill]',
    progressPercentage: '[data-progress-percentage]'
  };

  // Utilitaires
  const utils = {
    sanitizeHtml: function(str) {
      const div = document.createElement('div');
      div.textContent = str;
      return div.innerHTML;
    },

    formatDate: function(dateString) {
      return new Date(dateString).toLocaleDateString('fr-FR', {
        year: 'numeric',
        month: 'long',
        day: 'numeric'
      });
    },

    getCacheKey: function(address) {
      return 'water_analysis_' + address.toLowerCase().replace(/\s+/g, '_');
    },

    calculateScore: function(analyses) {
      if (!analyses || !analyses.length) return 50;
      
      let score = 100;
      let conformityIssues = 0;
      let qualityIssues = 0;
      
      // V√©rifier la conformit√© bact√©riologique
      const bactNonConform = analyses.filter(d => d.conformite_limites_bact_prelevement === 'N').length;
      const bactTotal = analyses.filter(d => d.conformite_limites_bact_prelevement).length;
      
      if (bactTotal > 0) {
        const bactNonConformRate = bactNonConform / bactTotal;
        if (bactNonConformRate > 0.1) score -= 30; // Plus de 10% non conforme
        else if (bactNonConformRate > 0.05) score -= 15; // Plus de 5% non conforme
      }
      
      // V√©rifier la conformit√© physico-chimique
      const physNonConform = analyses.filter(d => d.conformite_limites_pc_prelevement === 'N').length;
      const physTotal = analyses.filter(d => d.conformite_limites_pc_prelevement).length;
      
      if (physTotal > 0) {
        const physNonConformRate = physNonConform / physTotal;
        if (physNonConformRate > 0.1) score -= 25;
        else if (physNonConformRate > 0.05) score -= 12;
      }
      
      // Analyser les param√®tres sp√©cifiques
      analyses.forEach(function(analysis) {
        // Chlore r√©siduel √©lev√©
        if (analysis.code_parametre === '1335' && parseFloat(analysis.resultat_numerique) > 0.3) {
          score -= 5;
          qualityIssues++;
        }
        
        // Nitrates √©lev√©s
        if (analysis.code_parametre === '1340' && parseFloat(analysis.resultat_numerique) > 40) {
          score -= 10;
          qualityIssues++;
        }
        
        // Conductivit√© √©lev√©e (calcaire)
        if (analysis.code_parametre === '1303' && parseFloat(analysis.resultat_numerique) > 400) {
          score -= 8;
          qualityIssues++;
        }
      });
      
      return Math.max(0, Math.min(100, Math.round(score)));
    },

    getScoreCategory: function(score) {
      if (score >= 90) return { level: 'excellent', label: 'EXCELLENTE', color: '#10b981', emoji: 'üü¢' };
      if (score >= 80) return { level: 'good', label: 'TR√àS BONNE', color: '#059669', emoji: 'üü¢' };
      if (score >= 70) return { level: 'good', label: 'BONNE', color: '#65a30d', emoji: 'üü°' };
      if (score >= 60) return { level: 'average', label: 'MOYENNE', color: '#d97706', emoji: 'üü°' };
      if (score >= 40) return { level: 'poor', label: 'M√âDIOCRE', color: '#dc2626', emoji: 'üü†' };
      return { level: 'dangerous', label: 'DANGEREUSE', color: '#dc2626', emoji: 'üî¥' };
    },

    detectIssues: function(analyses) {
      const issues = [];
      
      analyses.forEach(function(analysis) {
        const value = parseFloat(analysis.resultat_numerique);
        
        switch(analysis.code_parametre) {
          case '1303': // Conductivit√©
            if (value > 400) issues.push({ type: 'calcaire', value: value, unit: '¬µS/cm' });
            break;
          case '1335': // Chlore r√©siduel
            if (value > 0.3) issues.push({ type: 'chlore', value: value, unit: 'mg/L' });
            break;
          case '1340': // Nitrates
            if (value > 40) issues.push({ type: 'nitrates', value: value, unit: 'mg/L' });
            break;
        }
      });
      
      return issues;
    }
  };

  // Gestion de la progression
  const progressManager = {
    updateProgress: function(step, percentage) {
      const progressFill = document.querySelector(selectors.progressFill);
      const progressPercentage = document.querySelector(selectors.progressPercentage);
      
      if (progressFill) {
        progressFill.style.width = percentage + '%';
      }
      
      if (progressPercentage) {
        progressPercentage.textContent = Math.round(percentage) + '%';
      }
      
      // Mettre √† jour les √©tapes visuelles
      this.updateSteps(step);
    },

    updateSteps: function(currentStep) {
      for (let i = 1; i <= totalSteps; i++) {
        const stepEl = document.querySelector('[data-step="' + i + '"]');
        const statusEl = document.querySelector('[data-step-status="' + i + '"]');
        
        if (stepEl && statusEl) {
          stepEl.classList.remove('active', 'completed', 'error');
          
          if (i < currentStep) {
            stepEl.classList.add('completed');
            statusEl.textContent = '‚úÖ';
          } else if (i === currentStep) {
            stepEl.classList.add('active');
            statusEl.textContent = '‚è≥';
          } else {
            statusEl.textContent = '‚è≥';
          }
        }
      }
    },

    setError: function(step) {
      const stepEl = document.querySelector('[data-step="' + step + '"]');
      const statusEl = document.querySelector('[data-step-status="' + step + '"]');
      
      if (stepEl && statusEl) {
        stepEl.classList.remove('active', 'completed');
        stepEl.classList.add('error');
        statusEl.textContent = '‚ùå';
      }
    }
  };

  // Fonction de debug am√©lior√©e
  function debug(message, type) {
    type = type || 'info';
    const timestamp = new Date().toLocaleTimeString('fr-FR');
    const logMessage = '[' + timestamp + '] üåä Water Analyzer: ' + message;
    
    console[type](logMessage);
    
    if (CONFIG.debugMode) {
      const debugEl = document.querySelector(selectors.debugInfo);
      const debugText = document.querySelector(selectors.debugText);
      if (debugEl && debugText) {
        debugEl.style.display = 'block';
        debugText.textContent = timestamp + ' - ' + message;
      }
    }
  }

  // Gestion des √©tats de l'interface
  const ui = {
    showLoading: function(step, percentage) {
      step = step || 'Initialisation...';
      percentage = percentage || 0;
      
      const loading = document.querySelector(selectors.loading);
      const results = document.querySelector(selectors.results);
      const loadingText = document.querySelector(selectors.loadingText);
      
      if (results) results.style.display = 'none';
      if (loading) loading.style.display = 'block';
      if (loadingText) loadingText.textContent = step;
      
      progressManager.updateProgress(currentStep, percentage);
    },

    hideLoading: function() {
      const loading = document.querySelector(selectors.loading);
      if (loading) loading.style.display = 'none';
      currentStep = 0;
    },

    toggleButton: function(disabled, text) {
      disabled = disabled || false;
      const button = document.querySelector(selectors.button);
      if (!button) return;

      button.disabled = disabled;
      
      if (text) {
        const buttonText = button.querySelector('.water-analyzer__button-text');
        const buttonIcon = button.querySelector('.water-analyzer__button-icon');
        
        if (buttonText) buttonText.textContent = text;
        if (buttonIcon) buttonIcon.textContent = disabled ? 'üîÑ' : '{{ section.settings.button_icon | default: "üîç" }}';
      }
    },

    showResults: function(html) {
      const results = document.querySelector(selectors.results);
      if (results) {
        results.innerHTML = html;
        results.style.display = 'block';
        
        // Scroll fluide vers les r√©sultats
        setTimeout(function() {
          results.scrollIntoView({ 
            behavior: 'smooth', 
            block: 'start' 
          });
        }, 100);
      }
    }
  };

  // Fonction de fetch avec timeout et retry
  function fetchWithTimeout(url, options) {
    options = options || {};
    const timeout = options.timeout || 5000;
    const fetchOptions = Object.assign({}, options);
    delete fetchOptions.timeout;
    
    const controller = new AbortController();
    const timeoutId = setTimeout(function() {
      controller.abort();
    }, timeout);
    
    fetchOptions.signal = controller.signal;
    
    return fetch(url, fetchOptions).then(function(response) {
      clearTimeout(timeoutId);
      return response;
    }).catch(function(error) {
      clearTimeout(timeoutId);
      throw error;
    });
  }

  // Fonction de fetch avec fallback am√©lior√©e
  function fetchWithFallback(url, methodIndex, retryCount) {
    methodIndex = methodIndex || 0;
    retryCount = retryCount || 0;
    
    if (methodIndex >= CORS_METHODS.length) {
      throw new Error('Toutes les m√©thodes de connexion ont √©chou√©. V√©rifiez votre connexion internet.');
    }

    const method = CORS_METHODS[methodIndex];
    debug('Tentative ' + (methodIndex + 1) + '/' + CORS_METHODS.length + ': ' + method.name + ' (retry: ' + retryCount + ')');

    const proxyUrl = method.proxy ? method.proxy + encodeURIComponent(url) : url;
    
    return fetchWithTimeout(proxyUrl, {
      method: 'GET',
      headers: {
        'Accept': 'application/json',
        'User-Agent': 'WaterAnalyzer/1.0'
      },
      mode: 'cors',
      timeout: method.timeout
    }).then(function(response) {
      if (!response.ok) {
        throw new Error('HTTP ' + response.status + ': ' + response.statusText);
      }
      return response.json();
    }).then(function(data) {
      const parsedData = method.parse(data);
      debug('Succ√®s avec ' + method.name);
      return parsedData;
    }).catch(function(error) {
      debug('M√©thode ' + method.name + ' √©chou√©e: ' + error.message, 'warn');
      
      // Retry avec la m√™me m√©thode si pas encore fait
      if (retryCount < CONFIG.maxRetries) {
        return new Promise(function(resolve) {
          setTimeout(resolve, 1000 * (retryCount + 1));
        }).then(function() {
          return fetchWithFallback(url, methodIndex, retryCount + 1);
        });
      }
      
      // Essayer la m√©thode suivante
      return fetchWithFallback(url, methodIndex + 1, 0);
    });
  }

  // Fonction principale d'analyse
  function analyzeWater(address) {
    if (!address || !address.trim()) {
      throw new Error('Veuillez saisir une adresse valide');
    }

    const cacheKey = utils.getCacheKey(address);
    
    // V√©rifier le cache
    if (cache.has(cacheKey)) {
      const cached = cache.get(cacheKey);
      if (Date.now() - cached.timestamp < CONFIG.cacheTimeout) {
        debug('Utilisation des donn√©es en cache');
        return Promise.resolve(cached.data);
      }
    }

    debug('D√©marrage de l analyse pour: ' + address);

    // √âtape 1: G√©ocodage (25%)
    currentStep = 1;
    ui.showLoading('√âtape 1: Localisation de l adresse...', 10);
    debug('G√©ocodage en cours...');
    
    const addressUrl = 'https://api-adresse.data.gouv.fr/search/?q=' + encodeURIComponent(address) + '&limit=5';
    
    return fetchWithFallback(addressUrl).then(function(locationData) {
      if (!locationData || !locationData.features || !locationData.features.length) {
        progressManager.setError(1);
        throw new Error('Adresse non trouv√©e. Essayez avec le code postal ou le nom de la ville.');
      }

      const location = locationData.features[0];
      const cityCode = location.properties.citycode;
      const cityName = location.properties.city;
      
      debug('Adresse trouv√©e: ' + cityName + ' (' + cityCode + ')');
      progressManager.updateProgress(1, 25);

      // √âtape 2: R√©cup√©ration des donn√©es de qualit√© (35%)
      currentStep = 2;
      ui.showLoading('√âtape 2: R√©cup√©ration des analyses d eau...', 35);
      
      const dateLimit = new Date();
      dateLimit.setFullYear(dateLimit.getFullYear() - CONFIG.dateRangeYears);
      const dateLimitStr = dateLimit.toISOString().split('T')[0];

      const waterUrl = 'https://hubeau.eaufrance.fr/api/v1/qualite_eau_potable/resultats_dis?code_commune=' + cityCode + '&date_min_prelevement=' + dateLimitStr + '&size=200&format=json&sort=desc';
      
      debug('R√©cup√©ration des donn√©es qualit√©...');
      return fetchWithFallback(waterUrl).then(function(qualityData) {
        progressManager.updateProgress(2, 60);
        
        // √âtape 3: Analyse des donn√©es (25%)
        currentStep = 3;
        ui.showLoading('√âtape 3: Analyse des donn√©es...', 75);

        const result = {
          location: location,
          qualityData: qualityData,
          timestamp: Date.now()
        };

        // Mise en cache
        cache.set(cacheKey, {
          data: result,
          timestamp: Date.now()
        });

        progressManager.updateProgress(3, 90);
        
        // √âtape 4: G√©n√©ration des recommandations (15%)
        currentStep = 4;
        ui.showLoading('√âtape 4: G√©n√©ration des recommandations...', 100);
        
        setTimeout(function() {
          progressManager.updateProgress(4, 100);
          debug('Analyse termin√©e avec succ√®s');
        }, 500);

        return result;
      });
    }).catch(function(error) {
      progressManager.setError(currentStep);
      debug('Erreur lors de l analyse: ' + error.message, 'error');
      throw error;
    });
  }

  // G√©n√©ration des recommandations produits
  function generateProductRecommendations(score, issues, location) {
    const category = utils.getScoreCategory(score);
    const recommendations = [];
    
    // Logique de recommandation bas√©e sur le score et les probl√®mes d√©tect√©s
    if (score >= 90) {
      // Excellente qualit√© - Carafes filtrantes pour le go√ªt
      if (CONFIG.collections.excellent.handle) {
        recommendations.push({
          collection: CONFIG.collections.excellent,
          priority: 1,
          reason: 'Votre eau est excellente ! Am√©liorez simplement son go√ªt.'
        });
      }
    } else if (score >= 80) {
      // Tr√®s bonne qualit√© - Traitement cibl√© selon les probl√®mes
      const hasCalcaire = issues.some(issue => issue.type === 'calcaire');
      
      if (hasCalcaire && CONFIG.collections.good_calcaire.handle) {
        recommendations.push({
          collection: CONFIG.collections.good_calcaire,
          priority: 1,
          reason: 'R√©duisez le calcaire pour prot√©ger vos √©quipements.'
        });
      } else if (CONFIG.collections.good_standard.handle) {
        recommendations.push({
          collection: CONFIG.collections.good_standard,
          priority: 1,
          reason: 'Filtration au charbon pour une eau parfaite.'
        });
      }
    } else if (score >= 60) {
      // Qualit√© moyenne - Syst√®me complet
      if (CONFIG.collections.average_multi.handle) {
        recommendations.push({
          collection: CONFIG.collections.average_multi,
          priority: 1,
          reason: 'Un syst√®me complet pour traiter tous les probl√®mes.'
        });
      }
    } else if (score >= 40) {
      // Qualit√© m√©diocre - UV pour s√©curiser
      if (CONFIG.collections.poor_uv.handle) {
        recommendations.push({
          collection: CONFIG.collections.poor_uv,
          priority: 1,
          reason: 'S√©curisez votre eau avec la st√©rilisation UV.'
        });
      }
    } else {
      // Qualit√© dangereuse - Osmose inverse
      if (CONFIG.collections.dangerous.handle) {
        recommendations.push({
          collection: CONFIG.collections.dangerous,
          priority: 1,
          reason: 'Purification maximale recommand√©e pour votre s√©curit√©.'
        });
      }
    }
    
    // Toujours proposer la maintenance si configur√©e
    if (CONFIG.collections.maintenance.handle) {
      recommendations.push({
        collection: CONFIG.collections.maintenance,
        priority: 2,
        reason: 'Entretenez vos √©quipements avec nos consommables.'
      });
    }
    
    return recommendations;
  }

  // G√©n√©ration du HTML des recommandations produits
  function generateRecommendationsHtml(score, issues, location) {
    const category = utils.getScoreCategory(score);
    const recommendations = generateProductRecommendations(score, issues, location);
    
    if (!recommendations.length) return '';
    
    let html = '<div class="water-recommendations">';
    
    // Header avec score
    html += '<div class="water-recommendations__header">';
    html += '<h3 class="water-recommendations__title">üéØ Nos Recommandations Personnalis√©es</h3>';
    html += '<p class="water-recommendations__subtitle">Bas√©es sur l analyse de votre eau</p>';
    html += '<div class="water-recommendations__score" style="color: ' + category.color + ';">';
    html += category.emoji + ' Score: ' + score + '/100 - ' + category.label;
    html += '</div>';
    html += '</div>';
    
    // Probl√®mes d√©tect√©s
    if (issues.length > 0) {
      html += '<div style="background: #fef3c7; padding: 1rem; border-radius: 12px; margin: 1rem 0;">';
      html += '<h4 style="margin: 0 0 0.5rem 0; color: #92400e;">‚ö†Ô∏è Probl√®mes d√©tect√©s :</h4>';
      issues.forEach(function(issue) {
        switch(issue.type) {
          case 'calcaire':
            html += '<p style="margin: 0.25rem 0; color: #92400e;">üíß Eau dure (calcaire): ' + issue.value + ' ' + issue.unit + '</p>';
            break;
          case 'chlore':
            html += '<p style="margin: 0.25rem 0; color: #92400e;">üß™ Chlore r√©siduel: ' + issue.value + ' ' + issue.unit + '</p>';
            break;
          case 'nitrates':
            html += '<p style="margin: 0.25rem 0; color: #92400e;">üå± Nitrates √©lev√©s: ' + issue.value + ' ' + issue.unit + '</p>';
            break;
        }
      });
      html += '</div>';
    }
    
    // Produits recommand√©s
    html += '<div class="water-recommendations__products">';
    
    recommendations.forEach(function(rec) {
      const collection = rec.collection;
      const collectionUrl = '/collections/' + collection.handle;
      
      html += '<div class="water-product-card">';
      html += '<div class="water-product-card__header">';
      html += '<div class="water-product-card__icon">' + collection.icon + '</div>';
      html += '<h4 class="water-product-card__title">' + utils.sanitizeHtml(collection.title) + '</h4>';
      html += '</div>';
      html += '<p class="water-product-card__description">' + utils.sanitizeHtml(collection.description) + '</p>';
      html += '<p style="font-size: 0.9rem; color: #6b7280; margin-bottom: 1rem;">' + utils.sanitizeHtml(rec.reason) + '</p>';
      html += '<a href="' + collectionUrl + '" class="water-product-card__cta">';
      html += '<span>Voir les produits</span>';
      html += '<span>‚Üí</span>';
      html += '</a>';
      html += '</div>';
    });
    
    html += '</div>';
    
    // Collection d'email si activ√©e
    if (CONFIG.enableEmailCollection) {
      html += '<div class="water-email-collection">';
      html += '<h4 class="water-email-collection__title">üìß Recevez nos conseils personnalis√©s</h4>';
      html += '<p style="margin: 0 0 1rem 0; color: #92400e;">Obtenez des recommandations adapt√©es √† votre r√©gion</p>';
      html += '<form class="water-email-collection__form" data-email-form>';
      html += '<input type="email" class="water-email-collection__input" placeholder="votre@email.com" required>';
      html += '<button type="submit" class="water-email-collection__button">S abonner</button>';
      html += '</form>';
      html += '</div>';
    }
    
    html += '</div>';
    
    return html;
  }

  // G√©n√©ration du HTML des r√©sultats
  function generateResultsHtml(location, qualityResponse) {
    const props = location.properties;
    let html = '';

    // Informations sur l'adresse
    html += '<div class="water-result water-result--location">';
    html += '<h3 class="water-result__title">üìç Adresse analys√©e</h3>';
    html += '<div class="water-result__content">';
    html += '<p><strong>' + utils.sanitizeHtml(props.label) + '</strong></p>';
    html += '<p>üèòÔ∏è ' + utils.sanitizeHtml(props.city) + ' (' + (props.postcode || 'N/A') + ')</p>';
    html += '<p>üÜî Code INSEE: ' + props.citycode + '</p>';
    if (props.context) {
      html += '<p>üìç ' + utils.sanitizeHtml(props.context) + '</p>';
    }
    html += '</div></div>';

    if (qualityResponse && qualityResponse.data && qualityResponse.data.length > 0) {
      const analyses = qualityResponse.data;
      const latest = analyses[0];
      const lastDate = utils.formatDate(latest.date_prelevement);
      
      // Calculer le score et d√©tecter les probl√®mes
      const score = utils.calculateScore(analyses);
      const issues = utils.detectIssues(analyses);
      const category = utils.getScoreCategory(score);

      // Informations g√©n√©rales avec score
      html += '<div class="water-result water-result--quality">';
      html += '<h3 class="water-result__title">üìä Rapport Qualit√© - ' + utils.sanitizeHtml(props.city) + '</h3>';
      html += '<div class="water-result__content">';
      html += '<div style="background: ' + category.color + '; color: white; padding: 1rem; border-radius: 12px; margin: 1rem 0; text-align: center;">';
      html += '<h4 style="margin: 0; font-size: 1.5rem;">' + category.emoji + ' Score: ' + score + '/100</h4>';
      html += '<p style="margin: 0.5rem 0 0 0; font-weight: 600;">' + category.label + '</p>';
      html += '</div>';
      html += '<p><strong>Derni√®re analyse:</strong> ' + lastDate + '</p>';
      html += '<p><strong>Total analyses:</strong> ' + analyses.length + ' sur ' + CONFIG.dateRangeYears + ' ans</p>';
      if (latest.nom_distributeur) {
        html += '<p><strong>Distributeur:</strong> ' + utils.sanitizeHtml(latest.nom_distributeur) + '</p>';
      }
      if (latest.nom_installation) {
        html += '<p><strong>Installation:</strong> ' + utils.sanitizeHtml(latest.nom_installation) + '</p>';
      }
      html += '</div></div>';

      // Analyse de conformit√©
      const bactConform = analyses.filter(function(d) { return d.conformite_limites_bact_prelevement === 'C'; }).length;
      const bactTotal = analyses.filter(function(d) { return d.conformite_limites_bact_prelevement; }).length;
      
      const physConform = analyses.filter(function(d) { return d.conformite_limites_pc_prelevement === 'C'; }).length;
      const physTotal = analyses.filter(function(d) { return d.conformite_limites_pc_prelevement; }).length;

      if (bactTotal > 0 || physTotal > 0) {
        html += '<div class="water-result" style="background: linear-gradient(135deg, #ecfdf5 0%, #d1fae5 100%); border-left: 4px solid #10b981;">';
        html += '<h4 class="water-result__title">‚úÖ Conformit√© R√©glementaire</h4>';
        html += '<div class="water-result__content">';

        if (bactTotal > 0) {
          const bactPercent = (bactConform / bactTotal) * 100;
          html += '<p>ü¶† Qualit√© bact√©riologique: <strong>' + bactPercent.toFixed(1) + '%</strong> conforme (' + bactConform + '/' + bactTotal + ' analyses)</p>';
        }

        if (physTotal > 0) {
          const physPercent = (physConform / physTotal) * 100;
          html += '<p>‚öóÔ∏è Param√®tres physico-chimiques: <strong>' + physPercent.toFixed(1) + '%</strong> conforme (' + physConform + '/' + physTotal + ' analyses)</p>';
        }

        html += '</div></div>';
      }

      // Ajouter les recommandations produits
      html += generateRecommendationsHtml(score, issues, location);

    } else {
      html += '<div class="water-result water-result--warning">';
      html += '<h4 class="water-result__title">‚ö†Ô∏è Aucune analyse r√©cente disponible</h4>';
      html += '<div class="water-result__content">';
      html += '<p>Aucune donn√©e d analyse trouv√©e pour <strong>' + utils.sanitizeHtml(props.city) + '</strong> sur les ' + CONFIG.dateRangeYears + ' derni√®res ann√©es.</p>';
      html += '<p>Cette commune peut √™tre desservie par un r√©seau intercommunal ou les donn√©es peuvent ne pas √™tre encore disponibles dans la base nationale.</p>';
      html += '<p>üí° Contactez votre mairie ou votre distributeur d eau pour plus d informations.</p>';
      html += '</div></div>';
      
      // Recommandations g√©n√©riques m√™me sans donn√©es
      if (CONFIG.collections.good_standard.handle) {
        html += generateRecommendationsHtml(75, [], location);
      }
    }

    return html;
  }

  // Affichage d'erreur
  function showError(message) {
    const html = '<div class="water-result water-result--error">' +
      '<h4 class="water-result__title">‚ùå Erreur</h4>' +
      '<div class="water-result__content">' +
      '<p>' + utils.sanitizeHtml(message) + '</p>' +
      '<p>üí° <strong>Suggestions :</strong></p>' +
      '<p>‚Ä¢ Essayez avec un code postal (ex: 01000)</p>' +
      '<p>‚Ä¢ V√©rifiez l orthographe de votre adresse</p>' +
      '<p>‚Ä¢ V√©rifiez votre connexion internet</p>' +
      '</div></div>';
    ui.showResults(html);
  }

  // Gestionnaire de collection d'email
  function handleEmailSubmission(email, analysisData) {
    if (!CONFIG.emailWebhook) return;
    
    const data = {
      email: email,
      address: analysisData.location.properties.label,
      city: analysisData.location.properties.city,
      timestamp: new Date().toISOString()
    };
    
    fetch(CONFIG.emailWebhook, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(data)
    }).then(function(response) {
      if (response.ok) {
        debug('Email collect√© avec succ√®s');
      }
    }).catch(function(error) {
      debug('Erreur lors de la collecte d email: ' + error.message, 'warn');
    });
  }

  // Gestionnaire principal du formulaire
  function handleFormSubmit(event) {
    event.preventDefault();
    
    const input = document.querySelector(selectors.input);
    const address = input ? input.value.trim() : '';
    
    if (!address) {
      showError('Veuillez saisir une adresse');
      return;
    }

    ui.toggleButton(true, 'Analyse...');

    analyzeWater(address).then(function(result) {
      const html = generateResultsHtml(result.location, result.qualityData);
      ui.showResults(html);
      
      // Ajouter les gestionnaires d'√©v√©nements pour les nouveaux √©l√©ments
      setTimeout(function() {
        const emailForm = document.querySelector('[data-email-form]');
        if (emailForm) {
          emailForm.addEventListener('submit', function(e) {
            e.preventDefault();
            const emailInput = emailForm.querySelector('input[type="email"]');
            if (emailInput && emailInput.value) {
              handleEmailSubmission(emailInput.value, result);
              emailInput.value = '';
              emailInput.placeholder = 'Merci ! ‚úÖ';
            }
          });
        }
      }, 100);
      
    }).catch(function(error) {
      showError(error.message);
    }).finally(function() {
      ui.hideLoading();
      ui.toggleButton(false, '{{ section.settings.button_text | default: "Analyser" }}');
    });
  }

  // Gestionnaire des exemples
  function handleExampleClick(event) {
    const example = event.target.dataset.example;
    const input = document.querySelector(selectors.input);
    
    if (input && example) {
      input.value = example;
      input.focus();
      
      // Animation de feedback
      event.target.style.transform = 'scale(0.95)';
      setTimeout(function() {
        event.target.style.transform = '';
      }, 150);
    }
  }

  // Initialisation
  function init() {
    debug('Initialisation de l analyseur d eau avec collections Shopify');

    // Gestionnaire du formulaire
    const form = document.querySelector(selectors.form);
    if (form) {
      form.addEventListener('submit', handleFormSubmit);
    }

    // Gestionnaire des exemples
    const examples = document.querySelectorAll(selectors.examples);
    for (let i = 0; i < examples.length; i++) {
      examples[i].addEventListener('click', handleExampleClick);
    }

    // Gestionnaire Enter sur l'input
    const input = document.querySelector(selectors.input);
    if (input) {
      input.addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
          e.preventDefault();
          handleFormSubmit(e);
        }
      });
    }

    debug('Analyseur initialis√© et pr√™t avec ' + Object.keys(CONFIG.collections).length + ' collections configur√©es');
  }

  // D√©marrage quand le DOM est pr√™t
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', init);
  } else {
    init();
  }

})();
</script>

{% schema %}
{
  "name": "Analyseur Eau Potable",
  "settings": [
    {
      "type": "header",
      "content": "Configuration g√©n√©rale"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Titre principal",
      "default": "Analyseur Qualit√© Eau Potable",
      "info": "Le titre affich√© en haut de la section"
    },
    {
      "type": "text",
      "id": "subtitle",
      "label": "Sous-titre",
      "default": "D√©couvrez la qualit√© de l eau √† votre adresse",
      "info": "Description affich√©e sous le titre"
    },
    {
      "type": "text",
      "id": "search_title",
      "label": "Titre de la section recherche",
      "default": "Analysez votre eau",
      "info": "Titre de la zone de recherche"
    },
    {
      "type": "textarea",
      "id": "search_description",
      "label": "Description de la recherche",
      "default": "Saisissez votre adresse pour obtenir un rapport de qualit√© d√©taill√©",
      "info": "Texte explicatif pour la recherche"
    },
    {
      "type": "text",
      "id": "placeholder",
      "label": "Placeholder du champ adresse",
      "default": "01000 Bourg-en-Bresse",
      "info": "Texte d exemple dans le champ de saisie"
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Texte du bouton",
      "default": "Analyser",
      "info": "Texte affich√© sur le bouton d analyse"
    },
    {
      "type": "header",
      "content": "Ic√¥nes et emojis"
    },
    {
      "type": "text",
      "id": "header_icon",
      "label": "Ic√¥ne du header",
      "default": "üåä",
      "info": "Emoji affich√© dans le titre principal"
    },
    {
      "type": "text",
      "id": "search_icon",
      "label": "Ic√¥ne de recherche",
      "default": "üè†",
      "info": "Emoji affich√© dans le titre de recherche"
    },
    {
      "type": "text",
      "id": "button_icon",
      "label": "Ic√¥ne du bouton",
      "default": "üîç",
      "info": "Emoji affich√© dans le bouton"
    },
    {
      "type": "text",
      "id": "loading_icon",
      "label": "Ic√¥ne de chargement",
      "default": "üîç",
      "info": "Emoji affich√© pendant le chargement"
    },
    {
      "type": "header",
      "content": "Couleurs et design"
    },
    {
      "type": "color",
      "id": "primary_color",
      "label": "Couleur primaire",
      "default": "#2563eb",
      "info": "Couleur principale de la section"
    },
    {
      "type": "color",
      "id": "secondary_color",
      "label": "Couleur secondaire",
      "default": "#1e40af",
      "info": "Couleur secondaire pour les d√©grad√©s"
    },
    {
      "type": "color",
      "id": "accent_color",
      "label": "Couleur d accent",
      "default": "#3b82f6",
      "info": "Couleur de la zone de recherche"
    },
    {
      "type": "color",
      "id": "button_color",
      "label": "Couleur du bouton",
      "default": "#ef4444",
      "info": "Couleur du bouton d analyse"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Couleur du texte",
      "default": "#1f2937",
      "info": "Couleur du texte principal"
    },
    {
      "type": "range",
      "id": "border_radius",
      "label": "Arrondi des bords",
      "min": 0,
      "max": 50,
      "step": 2,
      "default": 16,
      "unit": "px",
      "info": "Arrondi des coins de la section"
    },
    {
      "type": "range",
      "id": "section_padding",
      "label": "Espacement interne",
      "min": 1,
      "max": 5,
      "step": 1,
      "default": 2,
      "unit": "rem",
      "info": "Espacement interne de la section"
    },
    {
      "type": "header",
      "content": "Collections Shopify - Qualit√© Excellente (90-100)"
    },
    {
      "type": "collection",
      "id": "collection_excellent",
      "label": "Collection pour eau excellente",
      "info": "Carafes filtrantes, am√©liorateurs de go√ªt"
    },
    {
      "type": "header",
      "content": "Collections Shopify - Bonne Qualit√© (70-89)"
    },
    {
      "type": "collection",
      "id": "collection_adoucisseurs",
      "label": "Collection adoucisseurs",
      "info": "Pour traiter le calcaire (eau dure)"
    },
    {
      "type": "collection",
      "id": "collection_charbon",
      "label": "Collection filtres charbon",
      "info": "Filtration standard au charbon actif"
    },
    {
      "type": "header",
      "content": "Collections Shopify - Qualit√© Moyenne (60-69)"
    },
    {
      "type": "collection",
      "id": "collection_systemes",
      "label": "Collection syst√®mes complets",
      "info": "Solutions de traitement multi-√©tapes"
    },
    {
      "type": "header",
      "content": "Collections Shopify - Qualit√© M√©diocre (40-59)"
    },
    {
      "type": "collection",
      "id": "collection_uv",
      "label": "Collection syst√®mes UV",
      "info": "St√©rilisation UV pour s√©curiser l eau"
    },
    {
      "type": "header",
      "content": "Collections Shopify - Qualit√© Dangereuse (0-39)"
    },
    {
      "type": "collection",
      "id": "collection_osmoseurs",
      "label": "Collection osmoseurs",
      "info": "Purification maximale par osmose inverse"
    },
    {
      "type": "header",
      "content": "Collections Shopify - Maintenance"
    },
    {
      "type": "collection",
      "id": "collection_maintenance",
      "label": "Collection maintenance",
      "info": "Cartouches, consommables, pi√®ces d√©tach√©es"
    },
    {
      "type": "header",
      "content": "Fonctionnalit√©s"
    },
    {
      "type": "checkbox",
      "id": "show_examples",
      "label": "Afficher les exemples",
      "default": true,
      "info": "Affiche les boutons d exemples d adresses"
    },
    {
      "type": "text",
      "id": "examples",
      "label": "Exemples d adresses",
      "default": "01000,Gex,Bourg-en-Bresse",
      "info": "Liste d exemples s√©par√©s par des virgules"
    },
    {
      "type": "checkbox",
      "id": "enable_email_collection",
      "label": "Activer la collecte d emails",
      "default": false,
      "info": "Permet de collecter les emails des utilisateurs"
    },
    {
      "type": "url",
      "id": "email_webhook",
      "label": "Webhook pour les emails",
      "info": "URL pour envoyer les emails collect√©s (optionnel)"
    },
    {
      "type": "header",
      "content": "Options avanc√©es"
    },
    {
      "type": "checkbox",
      "id": "debug_mode",
      "label": "Mode debug",
      "default": false,
      "info": "Affiche les informations de debug (pour le d√©veloppement)"
    }
  ],
  "presets": [
    {
      "name": "Analyseur Eau Potable"
    }
  ]
}
{% endschema %}